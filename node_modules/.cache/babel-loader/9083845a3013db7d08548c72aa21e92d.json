{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Customer\\\\SelectCustomer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from '../../actions/index';\n\nclass SelectRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onchange = (event, object) => {\n      this.props.onchange({\n        type: object\n      });\n    };\n\n    this.ListRoom = listArray => {\n      var result = null;\n\n      if (listArray.length > 0) {\n        result = listArray.map((room, index) => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: room.IdArea,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 9\n            }\n          }, room.BranchName);\n        });\n      }\n\n      return result;\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.form.idarea != this.props.form.idarea || JSON.stringify(this.props.table) != JSON.stringify(nextProps.table)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    console.log('select_room');\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: \"\",\n      value: this.props.form.idarea,\n      id: \"input\",\n      onChange: e => {\n        this.onchange(e, {\n          onchangetable_idarea: {\n            type: 'CHANGE_TABLE_IDAREA',\n            text: e.target.value\n          }\n        });\n      },\n      class: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"T\\u1EA5t c\\u1EA3\"), this.ListRoom(this.props.table));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    table: state.rooms,\n    form: state.formtable\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onchange: text => {\n      dispatch(text);\n    },\n    onFetchsttTable: () => {\n      dispatch(action.acFetchsttTableRequest());\n    },\n    onchangeforarea: parameter => {\n      dispatch(parameter);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectRoom);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Customer/SelectCustomer.js"],"names":["React","Component","connect","action","SelectRoom","onchange","event","object","props","type","ListRoom","listArray","result","length","map","room","index","IdArea","BranchName","shouldComponentUpdate","nextProps","nextState","form","idarea","JSON","stringify","table","render","console","log","e","onchangetable_idarea","text","target","value","mapStateToProps","state","rooms","formtable","mapDispatchToProps","dispatch","onFetchsttTable","acFetchsttTableRequest","onchangeforarea","parameter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\n\r\n\r\n\r\n\r\nclass SelectRoom extends Component {\r\n \r\n  shouldComponentUpdate(nextProps, nextState)\r\n\t{\r\n   \r\n\r\n   if((nextProps.form.idarea != this.props.form.idarea) || (JSON.stringify(this.props.table) != JSON.stringify(nextProps.table)))\r\n\t\t{\r\n      return true;\r\n    }\r\n    return false;\r\n\t}\r\n\r\n\r\n\r\n  onchange = (event, object) =>{\r\n      this.props.onchange({type : object})\r\n    \r\n  \r\n  }\r\n  ListRoom = (listArray) =>{\r\n    var result  = null;\r\n    if(listArray.length > 0){\r\n      result = listArray.map((room, index) =>{\r\n        return (\r\n        <option value={room.IdArea}>{room.BranchName}</option>\r\n        )\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n  render() \r\n  \r\n  {\r\n   \r\nconsole.log('select_room')\r\n    return (\r\n        <select name=\"\" value = {this.props.form.idarea}id=\"input\"   onChange = {(e)=>{this.onchange(e,{onchangetable_idarea :{\r\n          type : 'CHANGE_TABLE_IDAREA',\r\n          text : e.target.value\r\n      }})}} class=\"form-control\" >\r\n        <option value=\"\">Tất cả</option>\r\n        {this.ListRoom(this.props.table)}\r\n\r\n    </select>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\nconsole.log(state);\r\n  return{\r\n    table : state.rooms,\r\n    form : state.formtable\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n    onchange : (text) =>{\r\n      dispatch(text)\r\n  },\r\n\tonFetchsttTable : () =>{\r\n\t  dispatch(action.acFetchsttTableRequest())\r\n  },\r\n  onchangeforarea : (parameter) =>{\r\n      dispatch(parameter)\r\n  }\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SelectRoom);"]},"metadata":{},"sourceType":"module"}