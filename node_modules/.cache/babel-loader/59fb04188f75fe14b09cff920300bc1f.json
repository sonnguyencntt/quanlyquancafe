{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListRoom.js\";\nimport React, { Component, PureComponent } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux'; // import ListData from './ListData';\n\nimport Emty from './Emty';\n\nclass ListRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = id => {\n      this.props.onDeleteRoom(id);\n    };\n\n    this.showData = datas => {\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }\n          }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 5\n            }\n          }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 5\n            }\n          }, data.BranchName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => {\n              this.tapFunction(data.id); //   this.props.OntapRoom(\n              //     {type : {\n              //       mroom_ontap : {\n              //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\n              //           event : 'show-modal',\n              //             }, \n              //       mroom_text :{\n              //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n              //           event : 'Chỉnh sửa dữ liệu'}\n              //         }\n              // })\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 12\n            }\n          }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete({\n              id: data.id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-trash\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 10\n            }\n          }), \"\\xA0\\xA0Delete\"))) //  <ListData\n          //  index = {index+1}\n          //  data = {data}\n          //  callback = {this.callbackFunction}\n          //  >\n          //  </ListData>\n          ;\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Emty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return result;\n    };\n\n    this.tapFunction = id => {\n      const room = this.props.rooms.map((room, index) => {\n        if (room.id === id) {\n          this.props.OntapRoom({\n            type: {\n              mroom_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_ROOM',\n                event: 'show-modal'\n              },\n              mroom_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              inputIdRoom: {\n                type: 'CHANGE_ROOM_IDROOM',\n                data: room.IdArea\n              },\n              inputIdIdRoom: {\n                type: 'CHANGE_ROOM_IDIDROOM',\n                data: room.id\n              },\n              inputNameRoom: {\n                type: 'CHANGE_ROOM_NAMEROOM',\n                data: room.BranchName\n              },\n              style_event: {\n                type: 'STATUS_STYLE_EVENT',\n                status: false\n              }\n            }\n          });\n        } else {\n          return;\n        }\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.props.room);\n    console.log(nextProps.room);\n    return true;\n  }\n\n  componentWillMount() {\n    this.props.fetchAllRooms();\n  }\n\n  render() {\n    console.log('da vao listroom');\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 6\n      }\n    }, this.showData(this.props.rooms));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    rooms: state.rooms\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    fetchAllRooms: () => {\n      dispatch(action.acFetchRoomsRequest());\n    },\n    onDeleteRoom: id => {\n      dispatch(action.acDeleteRoomsRequest(id));\n    },\n    OntapRoom: data => {\n      dispatch(data);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListRoom);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListRoom.js"],"names":["React","Component","PureComponent","action","connect","Emty","ListRoom","onDelete","id","props","onDeleteRoom","showData","datas","result","length","map","data","index","IdArea","BranchName","tapFunction","room","rooms","OntapRoom","type","mroom_ontap","event","mroom_text","inputIdRoom","inputIdIdRoom","inputNameRoom","style_event","status","shouldComponentUpdate","nextProps","nextState","console","log","componentWillMount","fetchAllRooms","render","mapStateToProps","state","mapDispatchToProps","dispatch","acFetchRoomsRequest","acDeleteRoomsRequest"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n// import ListData from './ListData';\r\n\r\nimport Emty from './Emty';\r\n\r\n\r\n\r\nclass ListRoom extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps, nextState)\r\n\t{\r\n    console.log(this.props.room);\r\n\r\n    console.log(nextProps.room);\r\n\t\treturn true;\r\n\t}\r\n  \r\n\r\n  onDelete = (id) =>{\r\n    this.props.onDeleteRoom(id)\r\n  }\r\n    componentWillMount(){\r\n      this.props.fetchAllRooms();\r\n\r\n    }\r\n    showData = (datas) =>\r\n    {\r\n    var result = null;\r\n    if(datas.length > 0)\r\n    {\r\n      \r\n      result = datas.map((data,index) =>\r\n      {\r\n     return (\r\n      <tr>\r\n      <td>{index+1}</td>\r\n    <td>{data.IdArea}</td>\r\n    <td>{data.BranchName}</td>\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() =>{\r\n          this.tapFunction(data.id)\r\n        //   this.props.OntapRoom(\r\n        //     {type : {\r\n        //       mroom_ontap : {\r\n        //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n        //           event : 'show-modal',\r\n        //             }, \r\n        //       mroom_text :{\r\n        //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n        //           event : 'Chỉnh sửa dữ liệu'}\r\n        //         }\r\n      \r\n        // })\r\n        }}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete({id : data.id})}\r\n        ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n      //  <ListData\r\n      //  index = {index+1}\r\n      //  data = {data}\r\n      //  callback = {this.callbackFunction}\r\n      //  >\r\n\r\n      //  </ListData>\r\n \r\n      \r\n       );\r\n      })\r\n    }\r\n    else\r\n    {\r\n      return (\r\n        <Emty/>\r\n      )\r\n    }\r\n   return result\r\n    };\r\n  \r\n  \r\n  \r\n  tapFunction = (id) =>{\r\n   \r\n    const room = this.props.rooms.map((room,index) =>\r\n    {\r\n      if(room.id === id){\r\n        this.props.OntapRoom( {type : {\r\n                mroom_ontap : {\r\n                    type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n                    event : 'show-modal',\r\n                      }, \r\n                mroom_text :{\r\n                    type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n                    event : 'Chỉnh sửa dữ liệu'},\r\n                inputIdRoom :{\r\n                  type : 'CHANGE_ROOM_IDROOM',\r\n                  data : room.IdArea\r\n                },\r\n                inputIdIdRoom :{\r\n                  type : 'CHANGE_ROOM_IDIDROOM',\r\n                  data : room.id\r\n                },\r\n                inputNameRoom : {\r\n                  type : 'CHANGE_ROOM_NAMEROOM',\r\n                  data : room.BranchName\r\n                },\r\n                style_event : {\r\n                  type : 'STATUS_STYLE_EVENT',\r\n                  status : false\r\n                }\r\n                  }\r\n        \r\n          })\r\n      }\r\n      else{\r\n        return;\r\n      }\r\n    })\r\n  \r\n\r\n\r\n}\r\n  \r\n\r\n  render() \r\n\r\n  {\r\n    console.log('da vao listroom');\r\n\r\n    return (\r\n      \r\n     <tbody>\r\n\t\t\t\t\t\t{this.showData(this.props.rooms)}\r\n\r\n\r\n             {/* <Modal \r\n             state = {this.state}\r\n             callbackOnchange = {this.callbackfunctionForonChange}\r\n             callbackforsubmit = {this.callbackfunctionforSubmitupdate}\r\n             /> */}\r\n            \r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n\r\n  return{\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n    fetchAllRooms : () =>{\r\n      dispatch(action.acFetchRoomsRequest());\r\n    },\r\n    onDeleteRoom : (id) =>{\r\n     \r\n      dispatch(action.acDeleteRoomsRequest(id));\r\n    },\r\n   \r\n    OntapRoom : (data) =>{\r\n      dispatch(data)\r\n    },\r\n  \r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListRoom);"]},"metadata":{},"sourceType":"module"}