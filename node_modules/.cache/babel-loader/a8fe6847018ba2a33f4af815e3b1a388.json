{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Customer\\\\Tabs.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Room from './Customer';\nimport Table from './Table';\n\nclass Tabs extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onTapTable = name => {\n      var statefornewUpdate = {};\n\n      if (name == 'table') {\n        this.props.onChangeTab({\n          type: {\n            ontapRoom: {\n              type: 'ONTAP_CHANGE_ROOM',\n              ontap: {\n                display: 'hide-modal',\n                action: '',\n                textcolor: 'default-color'\n              }\n            },\n            ontapTable: {\n              type: 'ONTAP_CHANGE_TABLE',\n              ontap: {\n                display: 'show-alert',\n                action: 'active',\n                textcolor: 'colorforontap'\n              }\n            },\n            onbtnRoom: {\n              type: 'ONTAP_CHANGE_BUTTON_ROOM',\n              ontap: 'hide-alert'\n            },\n            onbtnTable: {\n              type: 'ONTAP_CHANGE_BUTTON_TABLE',\n              ontap: ''\n            }\n          }\n        });\n      } else {\n        this.props.onChangeTab({\n          type: {\n            ontapRoom: {\n              type: 'ONTAP_CHANGE_ROOM',\n              ontap: {\n                display: 'show-alert',\n                action: 'active',\n                textcolor: 'colorforontap'\n              }\n            },\n            ontapTable: {\n              type: 'ONTAP_CHANGE_TABLE',\n              ontap: {\n                display: 'hide-modal',\n                action: '',\n                textcolor: 'default-color'\n              }\n            },\n            onbtnRoom: {\n              type: 'ONTAP_CHANGE_BUTTON_ROOM',\n              ontap: ''\n            },\n            onbtnTable: {\n              type: 'ONTAP_CHANGE_BUTTON_TABLE',\n              ontap: 'hide-alert'\n            }\n          }\n        });\n      }\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.ontap.table.display == nextProps.ontap.table.display) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('tab');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-12 \",\n      id: \"table-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"nav nav-tabs\",\n      role: \"tablist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      role: \"presentation\",\n      className: this.props.ontap.table.action,\n      onClick: () => {\n        this.onTapTable('table');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: ev => {\n        ev.preventDefault();\n      },\n      className: this.props.ontap.table.textcolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-user-cog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), \" \\xA0\\xA0 Nh\\xE0 cung c\\u1EA5p\")), /*#__PURE__*/React.createElement(\"li\", {\n      role: \"presentation\",\n      className: this.props.ontap.room.action,\n      onClick: () => {\n        this.onTapTable('room');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: ev => {\n        ev.preventDefault();\n      },\n      className: this.props.ontap.room.textcolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-users\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }), \" \\xA0\\xA0 Kh\\xE1ch h\\xE0ng\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tab-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"tabpanel\",\n      class: \"tab-pane \",\n      id: this.props.ontap.table.display,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"tabpanel\",\n      class: \"tab-pane\",\n      id: this.props.ontap.room.display,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Room, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ontap: state.onTap\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onChangeTab: tap => {\n      dispatch(tap);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Customer/Tabs.js"],"names":["React","Component","connect","Room","Table","Tabs","onTapTable","name","statefornewUpdate","props","onChangeTab","type","ontapRoom","ontap","display","action","textcolor","ontapTable","onbtnRoom","onbtnTable","shouldComponentUpdate","nextProps","nextState","table","render","console","log","ev","preventDefault","room","mapStateToProps","state","onTap","mapDispatchToProps","dispatch","tap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Room from './Customer';\r\nimport Table from './Table';\r\n\r\n\r\nclass Tabs extends Component {\r\n  \r\nshouldComponentUpdate(nextProps, nextState)\r\n{\r\n  if(this.props.ontap.table.display == nextProps.ontap.table.display)\r\n  {\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\n  onTapTable = (name) =>{\r\n    var statefornewUpdate =  {};\r\n\r\n    if(name == 'table'){\r\n    \r\n      this.props.onChangeTab({type : {\r\n        ontapRoom :{\r\n          type : 'ONTAP_CHANGE_ROOM',\r\n          ontap : {\r\n            display : 'hide-modal',\r\n            action : '',\r\n            textcolor : 'default-color',\r\n          }\r\n        },\r\n        ontapTable :{\r\n          type : 'ONTAP_CHANGE_TABLE',\r\n          ontap : {\r\n            display : 'show-alert',\r\n            action : 'active',\r\n            textcolor : 'colorforontap',\r\n          },\r\n        },\r\n        onbtnRoom : {\r\n          type : 'ONTAP_CHANGE_BUTTON_ROOM',\r\n          ontap : 'hide-alert'\r\n        },\r\n        onbtnTable : {\r\n          type : 'ONTAP_CHANGE_BUTTON_TABLE',\r\n          ontap : ''\r\n        }\r\n      }})\r\n    }\r\n    else\r\n    {\r\n      this.props.onChangeTab({type : {\r\n        ontapRoom :{\r\n          type : 'ONTAP_CHANGE_ROOM',\r\n          ontap : {\r\n            display : 'show-alert',\r\n            action : 'active',\r\n            textcolor : 'colorforontap',\r\n          },\r\n        },\r\n        ontapTable :{\r\n          type : 'ONTAP_CHANGE_TABLE',\r\n          ontap : {\r\n            display : 'hide-modal',\r\n            action : '',\r\n            textcolor : 'default-color',\r\n          }\r\n        },\r\n        onbtnRoom : {\r\n          type : 'ONTAP_CHANGE_BUTTON_ROOM',\r\n          ontap : ''\r\n        },\r\n        onbtnTable : {\r\n          type : 'ONTAP_CHANGE_BUTTON_TABLE',\r\n          ontap : 'hide-alert'\r\n        }\r\n      }})\r\n    }\r\n  }\r\n  render() \r\n  \r\n  {\r\n  \r\nconsole.log('tab');\r\n    return (\r\n     \r\n       \r\n        \r\n\t\t\t<div class=\"col-md-12 \" id=\"table-list\">\r\n\t\t\t\r\n      <div role=\"tabpanel\">\r\n          <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n              <li role=\"presentation\" className={this.props.ontap.table.action} onClick = {()=>{this.onTapTable('table')}}>\r\n                  <a href=\"#\"  onClick={ev => {ev.preventDefault()}} className={this.props.ontap.table.textcolor}>\r\n                  <i class=\"fas fa-user-cog\"></i> &nbsp;&nbsp; Nhà cung cấp</a>\r\n              </li>\r\n              <li role=\"presentation\"  className={this.props.ontap.room.action} onClick = {()=>{this.onTapTable('room')}}>\r\n                  <a href=\"#\" onClick={ev => {ev.preventDefault()}} className={this.props.ontap.room.textcolor}>\r\n                  <i class=\"fa fa-users\" aria-hidden=\"true\"></i> &nbsp;&nbsp;\r\n                    Khách hàng</a>\r\n              </li>\r\n          </ul>\r\n      \r\n          <div class=\"tab-content\">\r\n              <div role=\"tabpanel\" class=\"tab-pane \" id={this.props.ontap.table.display}>\r\n                  <Table/>\r\n              </div>\r\n              <div role=\"tabpanel\" class=\"tab-pane\" id={this.props.ontap.room.display}>\r\n              <Room/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      \r\n\t\t\t</div>\r\n\r\n        \r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst  mapStateToProps = state =>{\r\n\r\n  return{\r\n  ontap : state.onTap\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\nreturn {\r\n  onChangeTab : (tap) =>{\r\n    dispatch(tap)\r\n  }\r\n}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Tabs);"]},"metadata":{},"sourceType":"module"}