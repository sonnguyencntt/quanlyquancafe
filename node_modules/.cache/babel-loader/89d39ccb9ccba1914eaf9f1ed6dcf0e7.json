{"ast":null,"code":"import * as Types from './../../constants/ActionType';\nimport callApi from './../../ultis/apiCaller';\nconst init = [{}];\n\nconst initialState = init => {\n  return callApi('getdata', 'GET', null).then(res => {\n    init = res.data;\n  });\n};\n\nconst products = (state = initialState(), action) => {\n  var y = state;\n  var x = init;\n  console.log(x);\n  let newState = [...getStateFromPromise];\n\n  switch (action.type) {\n    case Types.INSERT_PRODUCT:\n      newState = action.product;\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default products;","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Table/products.js"],"names":["Types","callApi","init","initialState","then","res","data","products","state","action","y","x","console","log","newState","getStateFromPromise","type","INSERT_PRODUCT","product"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,MAAMC,IAAI,GAAG,CAAC,EAAD,CAAb;;AACA,MAAMC,YAAY,GAAID,IAAD,IACrB;AAEE,SAAOD,OAAO,CAAC,SAAD,EAAY,KAAZ,EAAmB,IAAnB,CAAP,CAAgCG,IAAhC,CAAqCC,GAAG,IAAG;AAChDH,IAAAA,IAAI,GAAIG,GAAG,CAACC,IAAZ;AACH,GAFQ,CAAP;AAID,CAPD;;AAUA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGL,YAAY,EAArB,EAAyBM,MAAzB,KACjB;AACE,MAAIC,CAAC,GAAGF,KAAR;AACA,MAAIG,CAAC,GAAGT,IAAR;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,MAAIG,QAAQ,GAAG,CAAC,GAAGC,mBAAJ,CAAf;;AACA,UAAON,MAAM,CAACO,IAAd;AACE,SAAKhB,KAAK,CAACiB,cAAX;AACIH,MAAAA,QAAQ,GAAGL,MAAM,CAACS,OAAlB;AACA,aAAOJ,QAAP;;AACF;AAAS,aAAOA,QAAP;AAJb;AAMD,CAZD;;AAaA,eAAeP,QAAf","sourcesContent":["import * as Types from './../../constants/ActionType';\r\nimport callApi from './../../ultis/apiCaller';\r\nconst init = [{}];\r\nconst initialState = (init) =>\r\n{\r\n  \r\n  return callApi('getdata', 'GET', null).then(res =>{\r\n    init =  res.data;\r\n});\r\n  \r\n}\r\n\r\n\r\nconst products = (state = initialState(), action) =>\r\n{\r\n  var y = state;\r\n  var x = init;\r\n  console.log(x);\r\n  let newState = [...getStateFromPromise];\r\n  switch(action.type){ \r\n    case Types.INSERT_PRODUCT :\r\n        newState = action.product;\r\n        return newState;    \r\n      default: return newState;\r\n  }\r\n}\r\nexport default products;"]},"metadata":{},"sourceType":"module"}