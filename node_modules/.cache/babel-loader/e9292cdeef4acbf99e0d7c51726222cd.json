{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Customer\\\\ListCustomer.js\";\nimport React, { Component, PureComponent } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux'; // import ListData from './ListData';\n\nimport Emty from './Emty';\n\nclass ListRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = id => {\n      this.props.onDeleteRoom(id);\n    };\n\n    this.showData = (datas, style) => {\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 7\n            }\n          }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 5\n            }\n          }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: style,\n            src: data.link,\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => {\n              this.tapFunction(data.id); //   this.props.OntapRoom(\n              //     {type : {\n              //       mroom_ontap : {\n              //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\n              //           event : 'show-modal',\n              //             }, \n              //       mroom_text :{\n              //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n              //           event : 'Chỉnh sửa dữ liệu'}\n              //         }\n              // })\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 12\n            }\n          }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete({\n              id: data.id,\n              type: 'ROOM'\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-trash\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }\n          }), \"\\xA0\\xA0Delete\"))) //  <ListData\n          //  index = {index+1}\n          //  data = {data}\n          //  callback = {this.callbackFunction}\n          //  >\n          //  </ListData>\n          ;\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Emty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return result;\n    };\n\n    this.tapFunction = id => {\n      const room = this.props.rooms.map((room, index) => {\n        if (room.id === id) {\n          this.props.OntapRoom({\n            type: {\n              mroom_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_ROOM',\n                event: 'show-modal'\n              },\n              mroom_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              inputIdRoom: {\n                type: 'CHANGE_ROOM_IDROOM',\n                data: room.IdArea\n              },\n              inputIdIdRoom: {\n                type: 'CHANGE_ROOM_IDIDROOM',\n                data: room.id\n              },\n              inputNameRoom: {\n                type: 'CHANGE_ROOM_NAMEROOM',\n                data: room.BranchName\n              },\n              style_event: {\n                type: 'STATUS_STYLE_EVENT',\n                status: false\n              }\n            }\n          });\n        } else {\n          return;\n        }\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (JSON.stringify(nextProps.rooms) == JSON.stringify(this.props.rooms)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentWillMount() {\n    this.props.fetchAllRooms({\n      type: 'ROOM'\n    });\n  }\n\n  render() {\n    console.log('da vao listroom');\n    const style = {\n      width: '80px'\n    };\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }\n    }, this.showData(this.props.rooms, style));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    rooms: state.rooms\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    fetchAllRooms: data => {\n      dispatch(action.acFetchRoomsRequest(data));\n    },\n    onDeleteRoom: id => {\n      dispatch(action.acDeleteRoomsRequest(id));\n    },\n    OntapRoom: data => {\n      dispatch(data);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListRoom);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Customer/ListCustomer.js"],"names":["React","Component","PureComponent","action","connect","Emty","ListRoom","onDelete","id","props","onDeleteRoom","showData","datas","style","result","length","map","data","index","IdArea","link","tapFunction","type","room","rooms","OntapRoom","mroom_ontap","event","mroom_text","inputIdRoom","inputIdIdRoom","inputNameRoom","BranchName","style_event","status","shouldComponentUpdate","nextProps","nextState","JSON","stringify","componentWillMount","fetchAllRooms","render","console","log","width","mapStateToProps","state","mapDispatchToProps","dispatch","acFetchRoomsRequest","acDeleteRoomsRequest"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n// import ListData from './ListData';\r\n\r\nimport Emty from './Emty';\r\n\r\n\r\n\r\nclass ListRoom extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps, nextState)\r\n\t{\r\n   if(JSON.stringify(nextProps.rooms) == JSON.stringify(this.props.rooms))\r\n\t\t{\r\n      return false;\r\n    }\r\n    return true;\r\n\t}\r\n  \r\n\r\n  onDelete = (id) =>{\r\n    this.props.onDeleteRoom(id)\r\n  }\r\n    componentWillMount(){\r\n      this.props.fetchAllRooms({type :  'ROOM'});\r\n\r\n    }\r\n    showData = (datas, style) =>\r\n    {\r\n    var result = null;\r\n    if(datas.length > 0)\r\n    {\r\n      \r\n      result = datas.map((data,index) =>\r\n      {\r\n     return (\r\n      <tr>\r\n      <td>{index+1}</td>\r\n    <td>{data.IdArea}</td>\r\n    <td><img style = {style} src={data.link} alt=\"\"/></td>\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() =>{\r\n          this.tapFunction(data.id)\r\n        //   this.props.OntapRoom(\r\n        //     {type : {\r\n        //       mroom_ontap : {\r\n        //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n        //           event : 'show-modal',\r\n        //             }, \r\n        //       mroom_text :{\r\n        //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n        //           event : 'Chỉnh sửa dữ liệu'}\r\n        //         }\r\n      \r\n        // })\r\n        }}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete({id : data.id, type : 'ROOM'})}\r\n        ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n      //  <ListData\r\n      //  index = {index+1}\r\n      //  data = {data}\r\n      //  callback = {this.callbackFunction}\r\n      //  >\r\n\r\n      //  </ListData>\r\n \r\n      \r\n       );\r\n      })\r\n    }\r\n    else\r\n    {\r\n      return (\r\n        <Emty/>\r\n      )\r\n    }\r\n   return result\r\n    };\r\n  \r\n  \r\n  \r\n  tapFunction = (id) =>{\r\n   \r\n    const room = this.props.rooms.map((room,index) =>\r\n    {\r\n      if(room.id === id){\r\n        this.props.OntapRoom( {type : {\r\n                mroom_ontap : {\r\n                    type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n                    event : 'show-modal',\r\n                      }, \r\n                mroom_text :{\r\n                    type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n                    event : 'Chỉnh sửa dữ liệu'},\r\n                inputIdRoom :{\r\n                  type : 'CHANGE_ROOM_IDROOM',\r\n                  data : room.IdArea\r\n                },\r\n                inputIdIdRoom :{\r\n                  type : 'CHANGE_ROOM_IDIDROOM',\r\n                  data : room.id\r\n                },\r\n                inputNameRoom : {\r\n                  type : 'CHANGE_ROOM_NAMEROOM',\r\n                  data : room.BranchName\r\n                },\r\n                style_event : {\r\n                  type : 'STATUS_STYLE_EVENT',\r\n                  status : false\r\n                }\r\n                  }\r\n        \r\n          })\r\n      }\r\n      else{\r\n        return;\r\n      }\r\n    })\r\n  \r\n\r\n\r\n}\r\n  \r\n\r\n  render() \r\n\r\n  {\r\n    console.log('da vao listroom');\r\n    const style = {width : '80px'}\r\n    return (\r\n      \r\n     <tbody>\r\n\t\t\t\t\t\t{this.showData(this.props.rooms, style)}\r\n\r\n\r\n             {/* <Modal \r\n             state = {this.state}\r\n             callbackOnchange = {this.callbackfunctionForonChange}\r\n             callbackforsubmit = {this.callbackfunctionforSubmitupdate}\r\n             /> */}\r\n            \r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n\r\n  return{\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n    fetchAllRooms : (data) =>{\r\n      dispatch(action.acFetchRoomsRequest(data));\r\n    },\r\n    onDeleteRoom : (id) =>{\r\n     \r\n      dispatch(action.acDeleteRoomsRequest(id));\r\n    },\r\n   \r\n    OntapRoom : (data) =>{\r\n      dispatch(data)\r\n    },\r\n  \r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListRoom);"]},"metadata":{},"sourceType":"module"}