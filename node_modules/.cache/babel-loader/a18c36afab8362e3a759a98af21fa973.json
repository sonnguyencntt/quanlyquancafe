{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Customer\\\\SelectSTT.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from '../../actions/index';\n\nclass SelectSTT extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ListStatus = listArray => {\n      var result = null;\n\n      if (listArray.length > 0) {\n        result = listArray.map((status, index) => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: status.Id_stt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }\n          }, status.name);\n        });\n      }\n\n      return result;\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (JSON.stringify(nextProps.status) == JSON.stringify(this.props.status)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentWillMount() {\n    this.props.onFetchsttTable();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: \"\",\n      value: \"1\",\n      id: \"input\",\n      onChange: () => {},\n      class: \"form-control\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"T\\u1EA5t c\\u1EA3\"), this.ListStatus(this.props.status));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.stttable\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFetchsttTable: () => {\n      dispatch(action.acFetchsttTableRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSTT);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Customer/SelectSTT.js"],"names":["React","Component","connect","action","SelectSTT","ListStatus","listArray","result","length","map","status","index","Id_stt","name","shouldComponentUpdate","nextProps","nextState","JSON","stringify","props","componentWillMount","onFetchsttTable","render","mapStateToProps","state","stttable","mapDispatchToProps","dispatch","acFetchsttTableRequest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAMA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAchCI,UAdgC,GAclBC,SAAD,IAAc;AACzB,UAAIC,MAAM,GAAI,IAAd;;AACA,UAAGD,SAAS,CAACE,MAAV,GAAmB,CAAtB,EAAwB;AACtBD,QAAAA,MAAM,GAAGD,SAAS,CAACG,GAAV,CAAc,CAACC,MAAD,EAASC,KAAT,KAAkB;AACvC,8BACA;AAAQ,YAAA,KAAK,EAAED,MAAM,CAACE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BF,MAAM,CAACG,IAAtC,CADA;AAGD,SAJQ,CAAT;AAKD;;AACD,aAAON,MAAP;AACD,KAxB+B;AAAA;;AAChCO,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EACtB;AACE,QAAGC,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACL,MAAzB,KAAmCO,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWT,MAA1B,CAAtC,EACD;AACI,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACF;;AAEAU,EAAAA,kBAAkB,GAAE;AAClB,SAAKD,KAAL,CAAWE,eAAX;AACD;;AAaDC,EAAAA,MAAM,GAEN;AAGE,wBACI;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAgB,MAAA,KAAK,EAAG,GAAxB;AAA2B,MAAA,EAAE,EAAC,OAA9B;AAAsC,MAAA,QAAQ,EAAI,MAAI,CAAE,CAAxD;AAA0D,MAAA,KAAK,EAAC,cAAhE;AAA+E,MAAA,QAAQ,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEC,KAAKjB,UAAL,CAAgB,KAAKc,KAAL,CAAWT,MAA3B,CAFD,CADJ;AAUH;;AAxCiC;;AA0ClC,MAAOa,eAAe,GAAGC,KAAK,IAAG;AAE/B,SAAM;AACJd,IAAAA,MAAM,EAAGc,KAAK,CAACC;AADX,GAAN;AAGD,CALD;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWR,KAAX,KAAoB;AAC7C,SAAO;AACRE,IAAAA,eAAe,EAAG,MAAK;AACrBM,MAAAA,QAAQ,CAACxB,MAAM,CAACyB,sBAAP,EAAD,CAAR;AACD;AAHO,GAAP;AAKD,CAND;;AAOA,eAAe1B,OAAO,CAACqB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CtB,SAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\n\r\n\r\n\r\n\r\nclass SelectSTT extends Component {\r\n  shouldComponentUpdate(nextProps, nextState)\r\n\t{\r\n   if(JSON.stringify(nextProps.status)== JSON.stringify(this.props.status))\r\n\t\t{\r\n      return false;\r\n    }\r\n    return true;\r\n\t}\r\n\r\n  componentWillMount(){\r\n    this.props.onFetchsttTable();\r\n  }\r\n\r\n  ListStatus = (listArray) =>{\r\n    var result  = null;\r\n    if(listArray.length > 0){\r\n      result = listArray.map((status, index) =>{\r\n        return (\r\n        <option value={status.Id_stt}>{status.name}</option>\r\n        )\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n  render() \r\n  \r\n  {\r\n    \r\n\r\n    return (\r\n        <select name=\"\" value = '1'id=\"input\" onChange = {()=>{}} class=\"form-control\" disabled>\r\n        <option value=\"\">Tất cả</option>\r\n        {this.ListStatus(this.props.status)}\r\n\r\n    </select>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\n\r\n  return{\r\n    status : state.stttable\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n\tonFetchsttTable : () =>{\r\n\t  dispatch(action.acFetchsttTableRequest())\r\n\t},\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SelectSTT);"]},"metadata":{},"sourceType":"module"}