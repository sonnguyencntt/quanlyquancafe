{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListData.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport { connect } from 'react-redux';\nimport * as action from '../../actions/index';\n\nclass ListData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showData = datas => {\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }\n          }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 5\n            }\n          }, data.BranchName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => this.onUpdate({\n              id: data.id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }\n          }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete({\n              id: data.id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }\n          }, \"Delete\"))) // <ListTable\n          // key = {index}\n          // product = {table}\n          // index = {index}\n          // />\n          ;\n        });\n      }\n\n      return result;\n    };\n\n    this.onDelete = id => {\n      this.props.onDeleteProduct(id);\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState){\n  //   return true\n  // }\n  componentWillMount() {\n    this.props.fetchAllProducts();\n  } //   callbackFunction = (dataofButton) => \n  //   {\n  //     this.setState({id : dataofButton})\n  //   }\n  // console.log(this.props.history.match.params.id);\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, this.showData(this.props.products));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.products);\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  console.log('dispatch');\n  return {\n    fetchAllProducts: () => {\n      dispatch(action.acFetchProductsRequest());\n    },\n    onDeleteProduct: id => {\n      dispatch(action.acDeleteProductsRequest(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListData);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListData.js"],"names":["React","Component","connect","action","ListData","showData","datas","result","length","map","data","index","IdArea","BranchName","onUpdate","id","onDelete","props","onDeleteProduct","componentWillMount","fetchAllProducts","render","products","mapStateToProps","state","console","log","mapDispatchToProps","dispatch","acFetchProductsRequest","acDeleteProductsRequest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAMA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAgB9BI,QAhB8B,GAgBlBC,KAAD,IACX;AACD,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAGD,KAAK,CAACE,MAAN,GAAe,CAAlB,EACA;AAEED,QAAAA,MAAM,GAAGD,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KACnB;AACF,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,IAAI,CAACE,MAAV,CADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,IAAI,CAACG,UAAV,CAFE,eAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGI;AAAQ,YAAA,IAAI,EAAC,QAAb;AACA,YAAA,KAAK,EAAC,iBADN;AACyB,YAAA,OAAO,EAAI,MAAM,KAAKC,QAAL,CAAc;AAACC,cAAAA,EAAE,EAAGL,IAAI,CAACK;AAAX,aAAd,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAMI;AAAQ,YAAA,IAAI,EAAC,QAAb;AACA,YAAA,KAAK,EAAC,8BADN;AAEA,YAAA,OAAO,EAAI,MAAM,KAAKC,QAAL,CAAc;AAACD,cAAAA,EAAE,EAAGL,IAAI,CAACK;AAAX,aAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CAHE,CAFJ,CAuBC;AACA;AACA;AACA;AAEA;AA5BD;AA8BG,SAhCQ,CAAT;AAiCD;;AACF,aAAOR,MAAP;AACG,KAzD6B;;AAAA,SA4DhCS,QA5DgC,GA4DpBD,EAAD,IAAO;AACd,WAAKE,KAAL,CAAWC,eAAX,CAA2BH,EAA3B;AACH,KA9D+B;AAAA;;AAG/B;AACA;AACA;AAGAI,EAAAA,kBAAkB,GAAE;AACpB,SAAKF,KAAL,CAAWG,gBAAX;AACA,GAV+B,CAWjC;AACA;AACA;AACA;AACG;;;AAgDDC,EAAAA,MAAM,GAEN;AAGE,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,KAAKhB,QAAL,CAAc,KAAKY,KAAL,CAAWK,QAAzB,CADP,CADA;AAQH;;AA5EgC;;AA8EjC,MAAOC,eAAe,GAAGC,KAAK,IAAG;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AAEA,SAAM;AACJA,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AADZ,GAAN;AAGD,CAND;;AASA,MAAMK,kBAAkB,GAAG,CAACC,QAAD,EAAWX,KAAX,KAAoB;AAC3CQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACF,SAAO;AACLN,IAAAA,gBAAgB,EAAG,MAAK;AACtBQ,MAAAA,QAAQ,CAACzB,MAAM,CAAC0B,sBAAP,EAAD,CAAR;AACD,KAHI;AAILX,IAAAA,eAAe,EAAIH,EAAD,IAAO;AAEvBa,MAAAA,QAAQ,CAACzB,MAAM,CAAC2B,uBAAP,CAA+Bf,EAA/B,CAAD,CAAR;AACD;AAPI,GAAP;AASD,CAXD;;AAcA,eAAeb,OAAO,CAACqB,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CvB,QAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\n\r\n\r\n\r\n\r\nclass ListData extends Component {\r\n  \r\n\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   return true\r\n  // }\r\n\r\n  \r\n  componentWillMount(){\r\n\t\tthis.props.fetchAllProducts();\r\n\t}\r\n//   callbackFunction = (dataofButton) => \r\n//   {\r\n//     this.setState({id : dataofButton})\r\n//   }\r\n   // console.log(this.props.history.match.params.id);\r\n   showData = (datas) =>\r\n   {\r\n\t var result = null;\r\n\t if(datas.length > 0)\r\n\t {\r\n\t   \r\n\t   result = datas.map((data,index) =>\r\n\t   {\r\n\t\treturn (\r\n\r\n      <tr>\r\n    <td>{data.IdArea}</td>\r\n    <td>{data.BranchName}</td>\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() => this.onUpdate({id : data.id})}>Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete({id : data.id})}\r\n        >Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n\r\n\t\t\t// <ListTable\r\n\t\t\t// key = {index}\r\n\t\t\t// product = {table}\r\n\t\t\t// index = {index}\r\n\t\t\t\r\n\t\t\t// />\r\n\t\t  );\r\n\t   })\r\n\t }\r\n\treturn result\r\n   };\r\n   // console.log(this.props.history.match.params.id);\r\n \r\n onDelete = (id) =>{\r\n     this.props.onDeleteProduct(id);\r\n }\r\n  render() \r\n  \r\n  {\r\n      \r\n\r\n    return (\r\n    <tbody>\r\n         \t{this.showData(this.props.products)}\r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\n  console.log(state.products);\r\n\r\n  return{\r\n    products: state.products\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n    console.log('dispatch');\r\n  return {\r\n    fetchAllProducts : () =>{\r\n      dispatch(action.acFetchProductsRequest());\r\n    },\r\n    onDeleteProduct : (id) =>{\r\n     \r\n      dispatch(action.acDeleteProductsRequest(id));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListData);\r\n "]},"metadata":{},"sourceType":"module"}