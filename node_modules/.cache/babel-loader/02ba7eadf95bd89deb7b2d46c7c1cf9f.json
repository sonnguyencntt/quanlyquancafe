{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListData.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux';\n\nclass ListData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onUpdate = id => {\n      this.props.callback(id);\n    };\n\n    this.tapFunction = id => {\n      const room = this.props.rooms.map((room, index) => {\n        if (room.id === id) {\n          this.props.OntapRoom({\n            type: {\n              mroom_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_ROOM',\n                event: 'show-modal'\n              },\n              mroom_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              inputIdRoom: {\n                type: 'CHANGE_ROOM_IDROOM',\n                data: room.IdArea\n              },\n              inputNameRoom: {\n                type: 'CHANGE_ROOM_NAMEROOM',\n                data: room.BranchName\n              }\n            }\n          });\n        } else {\n          return;\n        }\n      });\n    };\n\n    this.onDelete = id => {\n      this.props.onDeleteRoom(id);\n    };\n  }\n\n  render() {\n    var {\n      data,\n      index\n    } = this.props;\n    console.log('da vao listdata');\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, index), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, data.BranchName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      onClick: () => {\n        this.tapFunction(data.id); //   this.props.OntapRoom(\n        //     {type : {\n        //       mroom_ontap : {\n        //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\n        //           event : 'show-modal',\n        //             }, \n        //       mroom_text :{\n        //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n        //           event : 'Chỉnh sửa dữ liệu'}\n        //         }\n        // })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger margin-button\",\n      onClick: () => this.onDelete({\n        id: data.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-trash\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 14\n      }\n    }), \"\\xA0\\xA0Delete\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('vao map trong listdata');\n  return {\n    rooms: state.rooms\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  console.log('dispatch');\n  return {\n    onDeleteRoom: id => {\n      dispatch(action.acDeleteRoomsRequest(id));\n    },\n    OntapRoom: data => {\n      dispatch(data);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListData);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListData.js"],"names":["React","Component","action","connect","ListData","onUpdate","id","props","callback","tapFunction","room","rooms","map","index","OntapRoom","type","mroom_ontap","event","mroom_text","inputIdRoom","data","IdArea","inputNameRoom","BranchName","onDelete","onDeleteRoom","render","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","acDeleteRoomsRequest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAMA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAW/BI,QAX+B,GAWnBC,EAAD,IAAO;AAEd,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,EAApB;AACH,KAd8B;;AAAA,SAe/BG,WAf+B,GAehBH,EAAD,IAAO;AAEjB,YAAMI,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAqB,CAACF,IAAD,EAAMG,KAAN,KAClC;AACE,YAAGH,IAAI,CAACJ,EAAL,KAAYA,EAAf,EAAkB;AAChB,eAAKC,KAAL,CAAWO,SAAX,CAAsB;AAACC,YAAAA,IAAI,EAAG;AACtBC,cAAAA,WAAW,EAAG;AACVD,gBAAAA,IAAI,EAAG,6BADG;AAEVE,gBAAAA,KAAK,EAAG;AAFE,eADQ;AAKtBC,cAAAA,UAAU,EAAE;AACRH,gBAAAA,IAAI,EAAG,qCADC;AAERE,gBAAAA,KAAK,EAAG;AAFA,eALU;AAQtBE,cAAAA,WAAW,EAAE;AACXJ,gBAAAA,IAAI,EAAG,oBADI;AAEXK,gBAAAA,IAAI,EAAGV,IAAI,CAACW;AAFD,eARS;AAYtBC,cAAAA,aAAa,EAAG;AACdP,gBAAAA,IAAI,EAAG,sBADO;AAEdK,gBAAAA,IAAI,EAAGV,IAAI,CAACa;AAFE;AAZM;AAAR,WAAtB;AAmBD,SApBD,MAqBI;AACF;AACD;AACF,OA1BY,CAAb;AA8BH,KA/C8B;;AAAA,SAyDhCC,QAzDgC,GAyDpBlB,EAAD,IAAO;AACd,WAAKC,KAAL,CAAWkB,YAAX,CAAwBnB,EAAxB;AACH,KA3D+B;AAAA;;AA4D/BoB,EAAAA,MAAM,GAEN;AACI,QAAI;AAACN,MAAAA,IAAD;AAAOP,MAAAA;AAAP,QAAgB,KAAKN,KAAzB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AAEF,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKM,KAAL,CADF,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKO,IAAI,CAACC,MAAV,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACG,UAAV,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AACA,MAAA,KAAK,EAAC,iBADN;AACyB,MAAA,OAAO,EAAI,MAAK;AACvC,aAAKd,WAAL,CAAiBW,IAAI,CAACd,EAAtB,EADuC,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACC,OAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeG;AAAG,MAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfH,mBAHJ,eAoBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AACA,MAAA,KAAK,EAAC,8BADN;AAEA,MAAA,OAAO,EAAI,MAAM,KAAKkB,QAAL,CAAc;AAAClB,QAAAA,EAAE,EAAGc,IAAI,CAACd;AAAX,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGC;AAAG,MAAA,KAAK,EAAC,aAAT;AAAuB,qBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,mBApBJ,CAJA,CADJ;AAwCH;;AA3GgC;;AA6GjC,MAAOuB,eAAe,GAAGC,KAAK,IAAG;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEA,SAAM;AACJjB,IAAAA,KAAK,EAAEmB,KAAK,CAACnB;AADT,GAAN;AAGD,CAND;;AAOA,MAAMoB,kBAAkB,GAAG,CAACC,QAAD,EAAWzB,KAAX,KAAoB;AAC7CoB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACF,SAAO;AAELH,IAAAA,YAAY,EAAInB,EAAD,IAAO;AAEpB0B,MAAAA,QAAQ,CAAC9B,MAAM,CAAC+B,oBAAP,CAA4B3B,EAA5B,CAAD,CAAR;AACD,KALI;AAMLQ,IAAAA,SAAS,EAAIM,IAAD,IAAS;AACrBY,MAAAA,QAAQ,CAACZ,IAAD,CAAR;AACA;AARK,GAAP;AAWC,CAbD;;AAgBA,eAAejB,OAAO,CAAC0B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C3B,QAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nclass ListData extends Component {\r\n  \r\n\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //     if(JSON.stringify(this.props.data) === JSON.stringify(nextProps.data))\r\n  //     {\r\n  //         return false\r\n  //     }\r\n  //   return true\r\n  // }\r\n\r\n  onUpdate = (id) =>{\r\n\r\n      this.props.callback(id);\r\n  }\r\n  tapFunction = (id) =>{\r\n   \r\n      const room = this.props.rooms.map((room,index) =>\r\n      {\r\n        if(room.id === id){\r\n          this.props.OntapRoom( {type : {\r\n                  mroom_ontap : {\r\n                      type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n                      event : 'show-modal',\r\n                        }, \r\n                  mroom_text :{\r\n                      type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n                      event : 'Chỉnh sửa dữ liệu'},\r\n                  inputIdRoom :{\r\n                    type : 'CHANGE_ROOM_IDROOM',\r\n                    data : room.IdArea\r\n                  },\r\n                  inputNameRoom : {\r\n                    type : 'CHANGE_ROOM_NAMEROOM',\r\n                    data : room.BranchName\r\n                  }\r\n                    }\r\n          \r\n            })\r\n        }\r\n        else{\r\n          return;\r\n        }\r\n      })\r\n    \r\n  \r\n  \r\n  }\r\n  \r\n//   callbackFunction = (dataofButton) => \r\n//   {\r\n//     this.setState({id : dataofButton})\r\n//   }\r\n   // console.log(this.props.history.match.params.id);\r\n \r\n   // console.log(this.props.history.match.params.id);\r\n \r\n onDelete = (id) =>{\r\n     this.props.onDeleteRoom(id);\r\n }\r\n  render() \r\n  \r\n  {\r\n      var {data, index} = this.props\r\n      console.log('da vao listdata');\r\n      console.log(this.props);\r\n\r\n    return (\r\n        <tr>\r\n          <td>{index}</td>\r\n        <td>{data.IdArea}</td>\r\n        <td>{data.BranchName}</td>\r\n        <td>\r\n            \r\n             \r\n            <button type=\"button\" \r\n            class=\"btn btn-primary\"  onClick = {() =>{\r\n              this.tapFunction(data.id)\r\n            //   this.props.OntapRoom(\r\n            //     {type : {\r\n            //       mroom_ontap : {\r\n            //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n            //           event : 'show-modal',\r\n            //             }, \r\n            //       mroom_text :{\r\n            //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n            //           event : 'Chỉnh sửa dữ liệu'}\r\n            //         }\r\n          \r\n            // })\r\n            }}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n            \r\n            <button type=\"button\" \r\n            class=\"btn btn-danger margin-button\"\r\n            onClick = {() => this.onDelete({id : data.id})}\r\n            ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n            \r\n            \r\n    \r\n         \r\n        </td>\r\n    \r\n      </tr>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\n  console.log('vao map trong listdata');\r\n\r\n  return{\r\n    rooms: state.rooms\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  console.log('dispatch');\r\nreturn {\r\n  \r\n  onDeleteRoom : (id) =>{\r\n   \r\n    dispatch(action.acDeleteRoomsRequest(id));\r\n  },\r\n  OntapRoom : (data) =>{\r\n\t\tdispatch(data)\r\n\t},\r\n\r\n}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListData); "]},"metadata":{},"sourceType":"module"}