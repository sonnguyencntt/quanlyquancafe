{"ast":null,"code":"import * as Types from '../../constants/ActionType';\nconst tText = '';\nconst tOntap = 'hide-modal';\nconst rText = '';\nconst rOntap = 'hide-modal';\nexport const t_Text = (state = tText, action) => {\n  console.log(action);\n  let newState = state;\n\n  if (typeof action.type.mtable_text === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.mtable_text.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.MODAL_HEADER_FOR_INSERT_UPDATE_TABLE:\n        newState = action.type.mtable_text.event;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const t_Ontap = (state = tOntap, action) => {\n  let newState = state;\n\n  if (typeof action.type.mtable_ontap === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.mtable_ontap.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.MODAL_HEADER_FOR_ONTAP_TABLE:\n        newState = action.type.mtable_ontap.event;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const r_Text = (state = rText, action) => {\n  console.log(action);\n  let newState = state;\n\n  if (typeof action.type.mroom_text === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.mroom_text.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.MODAL_HEADER_FOR_INSERT_UPDATE_ROOM:\n        newState = action.type.mroom_text.event;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const r_Ontap = (state = rOntap, action) => {\n  console.log(action);\n  let newState = state;\n\n  if (typeof action.type.mroom_ontap === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.mroom_ontap.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.MODAL_HEADER_FOR_ONTAP_ROOM:\n        newState = action.type.mroom_ontap.event;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Customer/modal.js"],"names":["Types","tText","tOntap","rText","rOntap","t_Text","state","action","console","log","newState","type","mtable_text","MODAL_HEADER_FOR_INSERT_UPDATE_TABLE","event","t_Ontap","mtable_ontap","MODAL_HEADER_FOR_ONTAP_TABLE","r_Text","mroom_text","MODAL_HEADER_FOR_INSERT_UPDATE_ROOM","r_Ontap","mroom_ontap","MODAL_HEADER_FOR_ONTAP_ROOM"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAGA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,MAAM,GAAG,YAAf;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,MAAM,GAAG,YAAf;AAIA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,KAAT,EAAiBM,MAAjB,KACtB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,QAAQ,GAAGJ,KAAf;;AAEA,MAAG,OAAOC,MAAM,CAACI,IAAP,CAAYC,WAAnB,KAAmC,WAAtC,EAAkD;AAC9C,WAAOF,QAAP;AACH,GAFD,MAGI;AACA,YAAOH,MAAM,CAACI,IAAP,CAAYC,WAAZ,CAAwBD,IAA/B;AACI;AACA;AACA,WAAKX,KAAK,CAACa,oCAAX;AACIH,QAAAA,QAAQ,GAAGH,MAAM,CAACI,IAAP,CAAYC,WAAZ,CAAwBE,KAAnC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZf;AAcH;AAEJ,CAzBM;AA0BP,OAAO,MAAMK,OAAO,GAAG,CAACT,KAAK,GAAGJ,MAAT,EAAkBK,MAAlB,KACvB;AACI,MAAIG,QAAQ,GAAGJ,KAAf;;AAEA,MAAG,OAAOC,MAAM,CAACI,IAAP,CAAYK,YAAnB,KAAoC,WAAvC,EAAmD;AAC/C,WAAON,QAAP;AACH,GAFD,MAIA;AACI,YAAOH,MAAM,CAACI,IAAP,CAAYK,YAAZ,CAAyBL,IAAhC;AACE;AACA;AACA,WAAKX,KAAK,CAACiB,4BAAX;AACIP,QAAAA,QAAQ,GAAGH,MAAM,CAACI,IAAP,CAAYK,YAAZ,CAAyBF,KAApC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcH;AAEJ,CAzBM;AA0BP,OAAO,MAAMQ,MAAM,GAAG,CAACZ,KAAK,GAAGH,KAAT,EAAiBI,MAAjB,KACtB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,QAAQ,GAAGJ,KAAf;;AAEA,MAAG,OAAOC,MAAM,CAACI,IAAP,CAAYQ,UAAnB,KAAkC,WAArC,EAAiD;AAC7C,WAAOT,QAAP;AACH,GAFD,MAGI;AAEN,YAAOH,MAAM,CAACI,IAAP,CAAYQ,UAAZ,CAAuBR,IAA9B;AACE;AACA;AACA,WAAKX,KAAK,CAACoB,mCAAX;AACIV,QAAAA,QAAQ,GAAGH,MAAM,CAACI,IAAP,CAAYQ,UAAZ,CAAuBL,KAAlC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAzBM;AA0BP,OAAO,MAAMW,OAAO,GAAG,CAACf,KAAK,GAAGF,MAAT,EAAkBG,MAAlB,KACvB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,QAAQ,GAAGJ,KAAf;;AAEA,MAAG,OAAOC,MAAM,CAACI,IAAP,CAAYW,WAAnB,KAAmC,WAAtC,EAAkD;AAC9C,WAAOZ,QAAP;AACH,GAFD,MAGI;AACN,YAAOH,MAAM,CAACI,IAAP,CAAYW,WAAZ,CAAwBX,IAA/B;AACE;AACA;AACA,WAAKX,KAAK,CAACuB,2BAAX;AACIb,QAAAA,QAAQ,GAAGH,MAAM,CAACI,IAAP,CAAYW,WAAZ,CAAwBR,KAAnC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAxBM","sourcesContent":["import * as Types from '../../constants/ActionType';\r\n\r\n\r\nconst tText = '';\r\nconst tOntap = 'hide-modal';\r\nconst rText = '';\r\nconst rOntap = 'hide-modal';\r\n\r\n\r\n\r\nexport const t_Text = (state = tText , action) =>\r\n{\r\n    console.log(action)\r\n    let newState = state;\r\n\r\n    if(typeof action.type.mtable_text === \"undefined\"){\r\n        return newState\r\n    }\r\n    else{\r\n        switch(action.type.mtable_text.type){ \r\n            // case Types.FETCH_PRODUCTS:\r\n            //   newState = action.product\r\n            case Types.MODAL_HEADER_FOR_INSERT_UPDATE_TABLE :\r\n                newState = action.type.mtable_text.event;\r\n                return newState;   \r\n                // case Types.DELETE_PRODUCT :\r\n                //   newState = action.product;\r\n                //   return newState; \r\n                //   case Types.UPDATE_PRODUCT :\r\n                //     newState = action.product;\r\n                //     return newState;     \r\n              default: return newState;\r\n          }\r\n    }\r\n \r\n}\r\nexport const t_Ontap = (state = tOntap , action) =>\r\n{\r\n    let newState = state;\r\n\r\n    if(typeof action.type.mtable_ontap === \"undefined\"){\r\n        return newState\r\n    }\r\n    else\r\n    {\r\n        switch(action.type.mtable_ontap.type){ \r\n          // case Types.FETCH_PRODUCTS:\r\n          //   newState = action.product\r\n          case Types.MODAL_HEADER_FOR_ONTAP_TABLE :\r\n              newState = action.type.mtable_ontap.event;\r\n              return newState;   \r\n              // case Types.DELETE_PRODUCT :\r\n              //   newState = action.product;\r\n              //   return newState; \r\n              //   case Types.UPDATE_PRODUCT :\r\n              //     newState = action.product;\r\n              //     return newState;     \r\n            default: return newState;\r\n        }\r\n    }\r\n\r\n}\r\nexport const r_Text = (state = rText , action) =>\r\n{\r\n    console.log(action)\r\n    let newState = state;\r\n\r\n    if(typeof action.type.mroom_text === \"undefined\"){\r\n        return newState\r\n    }\r\n    else{\r\n        \r\n  switch(action.type.mroom_text.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.MODAL_HEADER_FOR_INSERT_UPDATE_ROOM :\r\n        newState = action.type.mroom_text.event;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const r_Ontap = (state = rOntap , action) =>\r\n{\r\n    console.log(action)\r\n    let newState = state;\r\n\r\n    if(typeof action.type.mroom_ontap === \"undefined\"){\r\n        return newState\r\n    }\r\n    else{\r\n  switch(action.type.mroom_ontap.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.MODAL_HEADER_FOR_ONTAP_ROOM :\r\n        newState = action.type.mroom_ontap.event;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}