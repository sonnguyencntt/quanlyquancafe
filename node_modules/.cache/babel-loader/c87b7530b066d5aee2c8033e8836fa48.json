{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListPagination.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux'; // class Li extends Component {\n//   showActive = (e, index) =>{\n//     console.log(index);\n//     //e.preventDefault()\n//   }\n//   render(){\n//   return(\n//     //<li onClick={(e)=>{this.showActive(e, this.props.index)}}>{this.props.index}</li>\n//     <li onClick = {(e)=>{this.showActive(e,this.props.index)}}><a id =\"\" href=\"#\">{this.props.index}</a></li>\n//   )\n//   }\n// }\n\nconst Li = props => {\n  function showActive(e, index) {\n    console.log(index);\n    e.preventDefault();\n    props.callbackfunction(index);\n  } //   }\n\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => showActive(e, props.index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    id: props.id,\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 52\n    }\n  }, props.index));\n};\n\nclass ListPagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callbackFromShowactive = data => {\n      console.log(data);\n      this.props.changefornavigation({\n        data: data,\n        type: 'CHANGE_NAVIGATION',\n        types: 'asd'\n      });\n      setTimeout(() => {\n        this.props.fetchAllTables({\n          room: this.props.data.room,\n          table: this.props.data.table,\n          status: this.props.data.status,\n          index: 1\n        }, {\n          index: this.props.navigation\n        });\n      }); // this.setState({index : data}, ()=>{\n      //   console.log(this.state.index);\n      //   this.props.fetchAllTables({room : this.props.data.room,\n      //     table : this.props.data.table,\n      //     status : this.props.data.status,\n      //     index : 1},{index :this.state.index});\n      // })\n    };\n\n    this.prevPage = e => {\n      e.preventDefault();\n\n      if (this.props.navigation == 1) {\n        return;\n      } else {\n        this.props.changefornavigation({\n          data: this.props.navigation - 1,\n          type: 'CHANGE_NAVIGATION'\n        });\n        setTimeout(() => {\n          this.props.fetchAllTables({\n            room: this.props.data.room,\n            table: this.props.data.table,\n            status: this.props.data.status,\n            index: 1\n          }, {\n            index: this.props.navigation\n          });\n        }); // this.setState({index : this.state.index - 1 }, ()=>{\n        //   this.props.fetchAllTables({room : this.props.data.room,\n        //     table : this.props.data.table,\n        //     status : this.props.data.status,\n        //     index : 1},{index :this.state.index});\n        // })\n      }\n    };\n\n    this.nextPage = e => {\n      e.preventDefault();\n\n      if (this.props.navigation == this.props.tables.count) {\n        return;\n      } else {\n        this.props.changefornavigation({\n          data: this.props.navigation + 1,\n          type: 'CHANGE_NAVIGATION',\n          types: 'asd'\n        });\n        setTimeout(() => {\n          this.props.fetchAllTables({\n            room: this.props.data.room,\n            table: this.props.data.table,\n            status: this.props.data.status,\n            index: 1\n          }, {\n            index: this.props.navigation\n          });\n        }); // this.setState({index : this.state.index + 1 }, ()=>{\n        //   this.props.fetchAllTables({room : this.props.data.room,\n        //     table : this.props.data.table,\n        //     status : this.props.data.status,\n        //     index : 1},{index :this.state.index});\n        // })\n      }\n    };\n\n    this.showPagination = number => {\n      var result = [];\n\n      if (number > 0) {\n        for (var i = 1; i <= number; i++) {\n          if (i == this.props.tables.index) {\n            result[i] = /*#__PURE__*/React.createElement(Li, {\n              index: i,\n              id: this.state.active,\n              callbackfunction: this.callbackFromShowactive,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 20\n              }\n            }); // result[i] = <li data-id=\"1\"  onClick = {()=>{this.showActive()}}><a id = {this.state.active} href=\"#\">{i}</a></li>\n          } else {\n            result[i] = /*#__PURE__*/React.createElement(Li, {\n              index: i,\n              id: \"\",\n              callbackfunction: this.callbackFromShowactive,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }\n            }); // result[i] = <li value={i} onClick = {(e)=>{this.showActive(e,e.target.value)}}><a id =\"\" href=\"#\">{i}</a></li>\n          }\n        }\n\n        console.log(result);\n        return result;\n      }\n\n      return result;\n    };\n\n    this.state = {\n      active: 'pagination-col'\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(nextState.index);\n    console.log(this.state.index);\n    return true;\n  }\n\n  render() {\n    var x = this.showPagination(2);\n    console.log(this.props.navigation);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"pagination pagination-lg float-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: e => {\n        this.prevPage(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 45\n      }\n    }, \"\\xAB\")), this.showPagination(this.props.tables.count), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: e => {\n        this.nextPage(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    }, \"\\xBB\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    tables: state.table,\n    data: state.event,\n    room: state.products,\n    status: state.stttable,\n    navigation: state.navigation\n  };\n}; // const mapDispatchToProps = (dispatch, props) =>{\n//     console.log('dispatch');\n//   return {\n//     fetchAllPagination : () =>{\n//       dispatch(action.acFetchTableRequest());\n//     },\n//     // onDeleteProduct : (id) =>{\n//     //   dispatch(action.acDeleteProductsRequest(id));\n//     // },\n//     // onUpdateTable : (id) =>{\n//     //   dispatch(action.acUpdateProductsRequest(id));\n//     // }\n//   }\n// }\n\n\nconst mapDispatchToProps = (dispatch, props) => {\n  console.log('dispatch');\n  return {\n    fetchAllTables: (object, index) => {\n      dispatch(action.acSearchTablesRequest(object, index));\n    },\n    changefornavigation: index => {\n      dispatch(index);\n    } // onDeleteProduct : (id) =>{\n    //   dispatch(action.acDeleteProductsRequest(id));\n    // },\n    // onUpdateTable : (id) =>{\n    //   dispatch(action.acUpdateProductsRequest(id));\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListPagination.js"],"names":["React","Component","action","connect","Li","props","showActive","e","index","console","log","preventDefault","callbackfunction","id","ListPagination","constructor","callbackFromShowactive","data","changefornavigation","type","types","setTimeout","fetchAllTables","room","table","status","navigation","prevPage","nextPage","tables","count","showPagination","number","result","i","state","active","shouldComponentUpdate","nextProps","nextState","render","x","mapStateToProps","event","products","stttable","mapDispatchToProps","dispatch","object","acSearchTablesRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n// class Li extends Component {\r\n\r\n//   showActive = (e, index) =>{\r\n//     console.log(index);\r\n  \r\n//     //e.preventDefault()\r\n//   }\r\n//   render(){\r\n//   return(\r\n//     //<li onClick={(e)=>{this.showActive(e, this.props.index)}}>{this.props.index}</li>\r\n//     <li onClick = {(e)=>{this.showActive(e,this.props.index)}}><a id =\"\" href=\"#\">{this.props.index}</a></li>\r\n//   )\r\n//   }\r\n// }\r\nconst Li = (props) =>{\r\n\r\n  function showActive(e, index){\r\n      console.log(index);\r\n      \r\n    e.preventDefault()\r\n    props.callbackfunction(index)\r\n  }\r\n    //   }\r\n  return(\r\n    <li onClick = {(e)=>showActive(e,props.index)}><a id = {props.id} href=\"#\">{props.index}</a></li>\r\n    \r\n  )\r\n}\r\n\r\nclass ListPagination extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n     active : 'pagination-col',\r\n     \r\n    }\r\n    } \r\n    callbackFromShowactive = (data) =>{\r\nconsole.log(data)\r\n      this.props.changefornavigation({data: data,\r\n                                type : 'CHANGE_NAVIGATION',types : 'asd'});\r\n\r\n      setTimeout(()=>{\r\n        \r\n        this.props.fetchAllTables({room : this.props.data.room,\r\n          table : this.props.data.table,\r\n          status : this.props.data.status,\r\n          index : 1},{index :this.props.navigation});\r\n      },)\r\n\r\n      // this.setState({index : data}, ()=>{\r\n      //   console.log(this.state.index);\r\n      //   this.props.fetchAllTables({room : this.props.data.room,\r\n      //     table : this.props.data.table,\r\n      //     status : this.props.data.status,\r\n      //     index : 1},{index :this.state.index});\r\n      // })\r\n    }\r\n\r\n    prevPage = (e) =>{\r\n      e.preventDefault()\r\n\r\n      if(this.props.navigation == 1)\r\n      {\r\n        return;\r\n      }\r\n      else\r\n      {\r\n        \r\n        this.props.changefornavigation({data: this.props.navigation - 1,\r\n          type : 'CHANGE_NAVIGATION'});\r\n\r\n          setTimeout(()=>{\r\n          this.props.fetchAllTables({room : this.props.data.room,\r\n          table : this.props.data.table,\r\n          status : this.props.data.status,\r\n          index : 1},{index :this.props.navigation});\r\n          },)\r\n\r\n        // this.setState({index : this.state.index - 1 }, ()=>{\r\n        //   this.props.fetchAllTables({room : this.props.data.room,\r\n        //     table : this.props.data.table,\r\n        //     status : this.props.data.status,\r\n        //     index : 1},{index :this.state.index});\r\n        // })\r\n      }\r\n    }\r\n    nextPage = (e) =>{\r\n      e.preventDefault()\r\n\r\n      if(this.props.navigation == this.props.tables.count)\r\n      {\r\n        return;\r\n      }\r\n      else\r\n      {\r\n        this.props.changefornavigation({data: this.props.navigation + 1,\r\n          type : 'CHANGE_NAVIGATION', types : 'asd'});\r\n\r\nsetTimeout(()=>{\r\nthis.props.fetchAllTables({room : this.props.data.room,\r\ntable : this.props.data.table,\r\nstatus : this.props.data.status,\r\nindex : 1},{index :this.props.navigation});\r\n},)\r\n\r\n\r\n        // this.setState({index : this.state.index + 1 }, ()=>{\r\n        //   this.props.fetchAllTables({room : this.props.data.room,\r\n        //     table : this.props.data.table,\r\n        //     status : this.props.data.status,\r\n        //     index : 1},{index :this.state.index});\r\n        // })\r\n      }\r\n    }\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   return true\r\n  // }\r\n\r\n//   constructor(props){\r\n    \r\n    // componentWillMount(){\r\n    //   this.props.fetchAllTables();\r\n    // }\r\n    showPagination = (number) =>\r\n    {\r\n        var result = [];\r\nif(number > 0)\r\n{\r\n    for (var i =1; i<= number;i++)\r\n    {\r\n       if(i==this.props.tables.index){\r\n\r\n       result[i] = <Li index = {i}\r\n       id = {this.state.active}\r\n       callbackfunction = {this.callbackFromShowactive}\r\n       />\r\n       // result[i] = <li data-id=\"1\"  onClick = {()=>{this.showActive()}}><a id = {this.state.active} href=\"#\">{i}</a></li>\r\n      }\r\n      else\r\n      {\r\n        result[i] = <Li index = {i}\r\n        id = ''\r\n        callbackfunction = {this.callbackFromShowactive}\r\n\r\n        />\r\n      // result[i] = <li value={i} onClick = {(e)=>{this.showActive(e,e.target.value)}}><a id =\"\" href=\"#\">{i}</a></li>\r\n       }\r\n    }\r\n    console.log(result);\r\n    return result;\r\n}\r\n\r\n    return result;\r\n\r\n\r\n     \r\n\r\n    };\r\nshouldComponentUpdate (nextProps, nextState){\r\n  console.log(nextState.index);\r\n  console.log(this.state.index);\r\n  return true;\r\n}\r\n\r\n  render() \r\n  \r\n  {\r\n     var x = this.showPagination(2);\r\n   console.log(this.props.navigation);\r\n\r\n    return (\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n\t\t\r\n\t\t<ul class=\"pagination pagination-lg float-pagination\">\r\n\t\t\t<li onClick = {(e) =>{this.prevPage(e)}}><a href=\"#\">&laquo;</a></li>\r\n            {this.showPagination(this.props.tables.count)}\r\n\t\t\t{/* <li><a href=\"#\">1</a></li>\r\n\t\t\t<li><a href=\"#\">2</a></li>\r\n\t\t\t<li><a href=\"#\">3</a></li>\r\n\t\t\t<li><a href=\"#\">4</a></li>\r\n\t\t\t<li><a href=\"#\">5</a></li> */}\r\n\t\t\t<li onClick = {(e) =>{this.nextPage(e)}}><a href=\"#\">&raquo;</a></li>\r\n\t\t</ul>\r\n\t\t\r\n\t</div>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n  console.log(state);\r\n  return{\r\n    tables: state.table,\r\n    data : state.event,\r\n\t  room : state.products,\r\n    status : state.stttable,\r\n    navigation : state.navigation\r\n  }\r\n}\r\n\r\n\r\n// const mapDispatchToProps = (dispatch, props) =>{\r\n//     console.log('dispatch');\r\n//   return {\r\n//     fetchAllPagination : () =>{\r\n//       dispatch(action.acFetchTableRequest());\r\n//     },\r\n//     // onDeleteProduct : (id) =>{\r\n     \r\n//     //   dispatch(action.acDeleteProductsRequest(id));\r\n//     // },\r\n//     // onUpdateTable : (id) =>{\r\n     \r\n//     //   dispatch(action.acUpdateProductsRequest(id));\r\n//     // }\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  console.log('dispatch');\r\nreturn {\r\n  fetchAllTables : (object,index) =>{\r\n    dispatch(action.acSearchTablesRequest(object,index));\r\n  },\r\n  changefornavigation : (index) =>{\r\n    dispatch(index)\r\n  }\r\n  \r\n  // onDeleteProduct : (id) =>{\r\n   \r\n  //   dispatch(action.acDeleteProductsRequest(id));\r\n  // },\r\n  // onUpdateTable : (id) =>{\r\n   \r\n  //   dispatch(action.acUpdateProductsRequest(id));\r\n  // }\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListPagination);\r\n"]},"metadata":{},"sourceType":"module"}