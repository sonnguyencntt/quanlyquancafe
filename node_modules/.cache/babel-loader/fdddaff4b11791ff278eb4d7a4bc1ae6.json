{"ast":null,"code":"import * as Types from '../../constants/ActionType';\nconst initial_table = {\n  display: 'hide-modal',\n  action: '',\n  textcolor: 'default-color'\n};\nconst initial_room = {\n  display: 'show-alert',\n  action: 'active',\n  textcolor: 'colorforontap'\n};\nexport const room = (state = initial_room, action) => {\n  console.log(action);\n  let newState = state;\n\n  if (typeof action.type.ontapRoom === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.ontapRoom.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.ONTAP_CHANGE_ROOM:\n        newState = action.type.ontapRoom.ontap;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const table = (state = initial_table, action) => {\n  console.log(action);\n  let newState = state;\n\n  if (typeof action.type.ontapTable === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.ontapTable.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.ONTAP_CHANGE_TABLE:\n        newState = action.type.ontapTable.ontap;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Table/tap.js"],"names":["Types","initial_table","display","action","textcolor","initial_room","room","state","console","log","newState","type","ontapRoom","ONTAP_CHANGE_ROOM","ontap","table","ontapTable","ONTAP_CHANGE_TABLE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAGA,MAAMC,aAAa,GAAE;AACjBC,EAAAA,OAAO,EAAG,YADO;AAEjBC,EAAAA,MAAM,EAAG,EAFQ;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAArB;AAKC,MAAMC,YAAY,GAAE;AACjBH,EAAAA,OAAO,EAAG,YADO;AAEjBC,EAAAA,MAAM,EAAG,QAFQ;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAApB;AAQD,OAAO,MAAME,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAwBF,MAAxB,KACpB;AACIK,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,MAAIO,QAAQ,GAAGH,KAAf;;AAEA,MAAG,OAAOJ,MAAM,CAACQ,IAAP,CAAYC,SAAnB,KAAiC,WAApC,EAAgD;AAC5C,WAAOF,QAAP;AACH,GAFD,MAGI;AAEN,YAAOP,MAAM,CAACQ,IAAP,CAAYC,SAAZ,CAAsBD,IAA7B;AACE;AACA;AACA,WAAKX,KAAK,CAACa,iBAAX;AACIH,QAAAA,QAAQ,GAAGP,MAAM,CAACQ,IAAP,CAAYC,SAAZ,CAAsBE,KAAjC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAzBM;AA0BP,OAAO,MAAMK,KAAK,GAAG,CAACR,KAAK,GAAGN,aAAT,EAAyBE,MAAzB,KACrB;AACIK,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,MAAIO,QAAQ,GAAGH,KAAf;;AAEA,MAAG,OAAOJ,MAAM,CAACQ,IAAP,CAAYK,UAAnB,KAAkC,WAArC,EAAiD;AAC7C,WAAON,QAAP;AACH,GAFD,MAGI;AACN,YAAOP,MAAM,CAACQ,IAAP,CAAYK,UAAZ,CAAuBL,IAA9B;AACE;AACA;AACA,WAAKX,KAAK,CAACiB,kBAAX;AACIP,QAAAA,QAAQ,GAAGP,MAAM,CAACQ,IAAP,CAAYK,UAAZ,CAAuBF,KAAlC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAxBM","sourcesContent":["import * as Types from '../../constants/ActionType';\r\n\r\n\r\nconst initial_table ={\r\n    display : 'hide-modal',\r\n    action : '',\r\n    textcolor : 'default-color',\r\n  }\r\n const initial_room ={\r\n    display : 'show-alert',\r\n    action : 'active',\r\n    textcolor : 'colorforontap',\r\n}\r\n\r\n\r\n\r\nexport const room = (state = initial_room , action) =>\r\n{\r\n    console.log(action)\r\n    let newState = state;\r\n\r\n    if(typeof action.type.ontapRoom === \"undefined\"){\r\n        return newState\r\n    }\r\n    else{\r\n        \r\n  switch(action.type.ontapRoom.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.ONTAP_CHANGE_ROOM :\r\n        newState = action.type.ontapRoom.ontap;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const table = (state = initial_table , action) =>\r\n{\r\n    console.log(action)\r\n    let newState = state;\r\n\r\n    if(typeof action.type.ontapTable === \"undefined\"){\r\n        return newState\r\n    }\r\n    else{\r\n  switch(action.type.ontapTable.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.ONTAP_CHANGE_TABLE :\r\n        newState = action.type.ontapTable.ontap;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}