{"ast":null,"code":"import * as Types from '../../constants/ActionType';\nconst event_table = '';\nconst event_room = '';\nconst event_status = '';\nexport const table = (state = event_table, action) => {\n  let newState = state;\n\n  if (typeof action.type.onchange_table === \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.onchange_table.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.ONCHANGE_TABLE:\n        newState = action.type.onchange_table.text;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const room = (state = event_room, action) => {\n  let newState = state;\n\n  if (typeof action.type.onchange_room == \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.onchange_room.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.ONCHANGE_ROOM:\n        newState = action.type.onchange_room.text;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};\nexport const status = (state = event_status, action) => {\n  let newState = state;\n\n  if (typeof action.type.onchange_status == \"undefined\") {\n    return newState;\n  } else {\n    switch (action.type.onchange_status.type) {\n      // case Types.FETCH_PRODUCTS:\n      //   newState = action.product\n      case Types.ONCHANGE_STATUS:\n        newState = action.type.onchange_status.text;\n        return newState;\n      // case Types.DELETE_PRODUCT :\n      //   newState = action.product;\n      //   return newState; \n      //   case Types.UPDATE_PRODUCT :\n      //     newState = action.product;\n      //     return newState;     \n\n      default:\n        return newState;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Customer/eventtable.js"],"names":["Types","event_table","event_room","event_status","table","state","action","newState","type","onchange_table","ONCHANGE_TABLE","text","room","onchange_room","ONCHANGE_ROOM","status","onchange_status","ONCHANGE_STATUS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,YAAY,GAAG,EAArB;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGJ,WAAT,EAAuBK,MAAvB,KACrB;AACE,MAAIC,QAAQ,GAAGF,KAAf;;AACA,MAAG,OAAOC,MAAM,CAACE,IAAP,CAAYC,cAAnB,KAAsC,WAAzC,EAAqD;AACnD,WAAOF,QAAP;AACD,GAFD,MAIA;AAGA,YAAOD,MAAM,CAACE,IAAP,CAAYC,cAAZ,CAA2BD,IAAlC;AACE;AACA;AACA,WAAKR,KAAK,CAACU,cAAX;AACIH,QAAAA,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYC,cAAZ,CAA2BE,IAAtC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAzBM;AA0BP,OAAO,MAAMK,IAAI,GAAG,CAACP,KAAK,GAAGH,UAAT,EAAsBI,MAAtB,KACpB;AACE,MAAIC,QAAQ,GAAGF,KAAf;;AACA,MAAG,OAAOC,MAAM,CAACE,IAAP,CAAYK,aAAnB,IAAoC,WAAvC,EAAmD;AACjD,WAAON,QAAP;AACD,GAFD,MAIA;AAGA,YAAOD,MAAM,CAACE,IAAP,CAAYK,aAAZ,CAA0BL,IAAjC;AACE;AACA;AACA,WAAKR,KAAK,CAACc,aAAX;AACIP,QAAAA,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYK,aAAZ,CAA0BF,IAArC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAzBM;AA0BP,OAAO,MAAMQ,MAAM,GAAG,CAACV,KAAK,GAAGF,YAAT,EAAwBG,MAAxB,KACtB;AACE,MAAIC,QAAQ,GAAGF,KAAf;;AACA,MAAG,OAAOC,MAAM,CAACE,IAAP,CAAYQ,eAAnB,IAAsC,WAAzC,EAAqD;AACnD,WAAOT,QAAP;AACD,GAFD,MAIA;AAGA,YAAOD,MAAM,CAACE,IAAP,CAAYQ,eAAZ,CAA4BR,IAAnC;AACE;AACA;AACA,WAAKR,KAAK,CAACiB,eAAX;AACIV,QAAAA,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYQ,eAAZ,CAA4BL,IAAvC;AACA,eAAOJ,QAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AAAS,eAAOA,QAAP;AAZb;AAcD;AACA,CAzBM","sourcesContent":["import * as Types from '../../constants/ActionType';\r\n\r\nconst event_table = ''\r\nconst event_room = '';\r\nconst event_status = '';\r\n\r\n\r\nexport const table = (state = event_table , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.onchange_table === \"undefined\"){\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n\r\n  \r\n  switch(action.type.onchange_table.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.ONCHANGE_TABLE :\r\n        newState = action.type.onchange_table.text;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const room = (state = event_room , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.onchange_room == \"undefined\"){\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n\r\n  \r\n  switch(action.type.onchange_room.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.ONCHANGE_ROOM :\r\n        newState = action.type.onchange_room.text;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}\r\nexport const status = (state = event_status , action) =>\r\n{\r\n  let newState = state;\r\n  if(typeof action.type.onchange_status == \"undefined\"){\r\n    return newState\r\n  }\r\n  else\r\n  {\r\n\r\n  \r\n  switch(action.type.onchange_status.type){ \r\n    // case Types.FETCH_PRODUCTS:\r\n    //   newState = action.product\r\n    case Types.ONCHANGE_STATUS :\r\n        newState = action.type.onchange_status.text;\r\n        return newState;   \r\n        // case Types.DELETE_PRODUCT :\r\n        //   newState = action.product;\r\n        //   return newState; \r\n        //   case Types.UPDATE_PRODUCT :\r\n        //     newState = action.product;\r\n        //     return newState;     \r\n      default: return newState;\r\n  }\r\n}\r\n}\r\n;"]},"metadata":{},"sourceType":"module"}