{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\SelectRoom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from '../../actions/index';\n\nclass SelectRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = (e, type) => {\n      var target = e.target;\n      var value = target.value;\n      this.props.onchangeforarea({\n        data: value,\n        type: type\n      });\n    };\n\n    this.ListRoom = listArray => {\n      console.log(listArray.length);\n      var result = null;\n\n      if (listArray.length > 0) {\n        result = listArray.map((room, index) => {\n          console.log(room);\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: room.IdArea,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 9\n            }\n          }, room.BranchName);\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    //   var {data, index} = this.props\n    console.log('da vao selectdata');\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: \"\",\n      value: this.props.form.idarea,\n      id: \"input\",\n      onChange: e => {\n        this.onChange(e, 'CHANGE_TABLE_IDAREA');\n      },\n      class: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"T\\u1EA5t c\\u1EA3\"), this.ListRoom(this.props.table));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    table: state.products,\n    form: state.formtable\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFetchsttTable: () => {\n      dispatch(action.acFetchsttTableRequest());\n    },\n    onchangeforarea: parameter => {\n      dispatch(parameter);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectRoom);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/SelectRoom.js"],"names":["React","Component","connect","action","SelectRoom","onChange","e","type","target","value","props","onchangeforarea","data","ListRoom","listArray","console","log","length","result","map","room","index","IdArea","BranchName","render","form","idarea","table","mapStateToProps","state","products","formtable","mapDispatchToProps","dispatch","onFetchsttTable","acFetchsttTableRequest","parameter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAMA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAEnCI,QAFmC,GAExB,CAACC,CAAD,EAAIC,IAAJ,KAAW;AACpB,UAAIC,MAAM,GAAGF,CAAC,CAACE,MAAf;AACA,UAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,WAAKC,KAAL,CAAWC,eAAX,CACI;AAACC,QAAAA,IAAI,EAAGH,KAAR;AAAeF,QAAAA,IAAI,EAAGA;AAAtB,OADJ;AAID,KATkC;;AAAA,SAUjCM,QAViC,GAUrBC,SAAD,IAAc;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,MAAtB;AACA,UAAIC,MAAM,GAAI,IAAd;;AACA,UAAGJ,SAAS,CAACG,MAAV,GAAmB,CAAtB,EAAwB;AACtBC,QAAAA,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACrCN,UAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,8BACA;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BF,IAAI,CAACG,UAAlC,CADA;AAGD,SALQ,CAAT;AAMD;;AACD,aAAOL,MAAP;AACD,KAtBgC;AAAA;;AAuBjCM,EAAAA,MAAM,GAEN;AACE;AACET,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACFD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AAEA,wBACI;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAgB,MAAA,KAAK,EAAI,KAAKA,KAAL,CAAWe,IAAX,CAAgBC,MAAzC;AAAgD,MAAA,EAAE,EAAC,OAAnD;AAA2D,MAAA,QAAQ,EAAKpB,CAAD,IAAK;AAAC,aAAKD,QAAL,CAAcC,CAAd,EAAgB,qBAAhB;AAAuC,OAApH;AAAsH,MAAA,KAAK,EAAC,cAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEC,KAAKO,QAAL,CAAc,KAAKH,KAAL,CAAWiB,KAAzB,CAFD,CADJ;AAUH;;AAxCkC;;AA0CnC,MAAOC,eAAe,GAAGC,KAAK,IAAG;AAC/Bd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AAEA,SAAM;AACJF,IAAAA,KAAK,EAAGE,KAAK,CAACC,QADV;AAEJL,IAAAA,IAAI,EAAGI,KAAK,CAACE;AAFT,GAAN;AAID,CAPD;;AASA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWvB,KAAX,KAAoB;AAC7C,SAAO;AACRwB,IAAAA,eAAe,EAAG,MAAK;AACrBD,MAAAA,QAAQ,CAAC9B,MAAM,CAACgC,sBAAP,EAAD,CAAR;AACA,KAHM;AAIPxB,IAAAA,eAAe,EAAIyB,SAAD,IAAc;AAC5BH,MAAAA,QAAQ,CAACG,SAAD,CAAR;AACH;AANM,GAAP;AAQD,CATD;;AAUA,eAAelC,OAAO,CAAC0B,eAAD,EAAiBI,kBAAjB,CAAP,CAA4C5B,UAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\n\r\n\r\n\r\n\r\nclass SelectRoom extends Component {\r\n \r\nonChange = (e, type)=>{\r\n  var target = e.target;\r\n  var value = target.value;\r\n  this.props.onchangeforarea(\r\n      {data : value, type : type}\r\n  )\r\n  \r\n}\r\n  ListRoom = (listArray) =>{\r\n    console.log(listArray.length)\r\n    var result  = null;\r\n    if(listArray.length > 0){\r\n      result = listArray.map((room, index) =>{\r\n        console.log(room);\r\n        return (\r\n        <option value={room.IdArea}>{room.BranchName}</option>\r\n        )\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n  render() \r\n  \r\n  {\r\n    //   var {data, index} = this.props\r\n      console.log('da vao selectdata');\r\n    console.log(this.props);\r\n\r\n    return (\r\n        <select name=\"\" value = {this.props.form.idarea}id=\"input\" onChange = {(e)=>{this.onChange(e,'CHANGE_TABLE_IDAREA')}} class=\"form-control\" >\r\n        <option value=\"\">Tất cả</option>\r\n        {this.ListRoom(this.props.table)}\r\n\r\n    </select>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\n  console.log(state);\r\n\r\n  return{\r\n    table : state.products,\r\n    form : state.formtable\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n\tonFetchsttTable : () =>{\r\n\t  dispatch(action.acFetchsttTableRequest())\r\n  },\r\n  onchangeforarea : (parameter) =>{\r\n      dispatch(parameter)\r\n  }\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SelectRoom);"]},"metadata":{},"sourceType":"module"}