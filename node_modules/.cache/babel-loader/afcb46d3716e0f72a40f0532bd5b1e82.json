{"ast":null,"code":"import * as Types from './../../constants/ActionType';\nimport callApi from './../../ultis/apiCaller';\n\nconst initialState = () => {\n  return callApi('getdata', 'GET', null).then(res => {\n    return res.data;\n  });\n};\n\nconst products = action => {\n  var getStateFromPromise = [{}];\n  initialState().then(res => {\n    getStateFromPromise = res;\n  });\n  console.log(getStateFromPromise);\n  let newState = [...getStateFromPromise];\n\n  switch (action.type) {\n    case Types.INSERT_PRODUCT:\n      newState = action.product;\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default products;","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Table/products.js"],"names":["Types","callApi","initialState","then","res","data","products","action","getStateFromPromise","console","log","newState","type","INSERT_PRODUCT","product"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AACA,MAAMC,YAAY,GAAG,MACrB;AAEE,SAAOD,OAAO,CAAC,SAAD,EAAY,KAAZ,EAAmB,IAAnB,CAAP,CAAgCE,IAAhC,CAAqCC,GAAG,IAAG;AAChD,WAAOA,GAAG,CAACC,IAAX;AACH,GAFQ,CAAP;AAID,CAPD;;AAUA,MAAMC,QAAQ,GAAIC,MAAD,IACjB;AACE,MAAIC,mBAAmB,GAAG,CAAC,EAAD,CAA1B;AACAN,EAAAA,YAAY,GAAGC,IAAf,CAAqBC,GAAD,IAAO;AAACI,IAAAA,mBAAmB,GAACJ,GAApB;AAAwB,GAApD;AACFK,EAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AACE,MAAIG,QAAQ,GAAG,CAAC,GAAGH,mBAAJ,CAAf;;AACA,UAAOD,MAAM,CAACK,IAAd;AACE,SAAKZ,KAAK,CAACa,cAAX;AACIF,MAAAA,QAAQ,GAAGJ,MAAM,CAACO,OAAlB;AACA,aAAOH,QAAP;;AACF;AAAS,aAAOA,QAAP;AAJb;AAMD,CAZD;;AAaA,eAAeL,QAAf","sourcesContent":["import * as Types from './../../constants/ActionType';\r\nimport callApi from './../../ultis/apiCaller';\r\nconst initialState = () =>\r\n{\r\n  \r\n  return callApi('getdata', 'GET', null).then(res =>{\r\n    return res.data;\r\n});\r\n  \r\n}\r\n\r\n\r\nconst products = (action) =>\r\n{\r\n  var getStateFromPromise = [{}];\r\n  initialState().then((res)=>{getStateFromPromise=res});\r\nconsole.log(getStateFromPromise);\r\n  let newState = [...getStateFromPromise];\r\n  switch(action.type){ \r\n    case Types.INSERT_PRODUCT :\r\n        newState = action.product;\r\n        return newState;    \r\n      default: return newState;\r\n  }\r\n}\r\nexport default products;"]},"metadata":{},"sourceType":"module"}