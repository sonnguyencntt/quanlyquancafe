{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListTable.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux';\nimport Modal from './ModTable';\nimport Emty from './Emty';\n\nclass ListTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = data => {\n      this.props.onDeleteTable({\n        index: 1,\n        room: this.props.event.room,\n        table: this.props.event.table,\n        status: this.props.event.status,\n        id: data.id\n      });\n    };\n\n    this.showData = (datas, id) => {\n      console.log(id);\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          var statusName = data.idStatus == 1 ? 'Đang sử dụng' : 'Trống';\n          var statusClass = data.idStatus == 1 ? 'success' : 'default';\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }\n          }, (id - 1) * 5 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 5\n            }\n          }, data.IdTable), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 5\n            }\n          }, data.TableName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            class: `size label label-${statusClass}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 14\n            }\n          }, statusName)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 5\n            }\n          }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 5\n            }\n          }, data.idBill), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => this.onUpdate(data.IdTable),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 80\n            }\n          }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete({\n              idtable: data.IdTable\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-trash\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 10\n            }\n          }), \"\\xA0\\xA0Delete\"))) //  <ListDataofRoom\n          //  index = {index}\n          //  id = {((id-1) * 5) + index+1}\n          //  data = {data}\n          //  >\n          //  </ListDataofRoom>\n          ;\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Emty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return result;\n    };\n\n    this.onUpdate = data => {\n      const tables = this.props.table.data.map((table, index) => {\n        if (table.IdTable == data) {\n          this.props.showModal({\n            type: {\n              mtable_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_TABLE',\n                event: 'show-modal'\n              },\n              mtable_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              style_event: {\n                type: 'STATUS_STYLE_EVENT',\n                status: false\n              },\n              onchangetable_idtable: {\n                type: 'CHANGE_TABLE_IDTABLE',\n                text: table.IdTable\n              },\n              onchangetable_name: {\n                type: 'CHANGE_TABLE_NAME',\n                text: table.TableName\n              },\n              onchangetable_idarea: {\n                type: 'CHANGE_TABLE_IDAREA',\n                text: table.IdArea\n              }\n            }\n          });\n        }\n      });\n    };\n\n    this.callbackFunction = data => {\n      this.setState({\n        id: data.id,\n        idarea: data.IdArea,\n        name: data.BranchName,\n        onTap: 'modal fade show-modal'\n      });\n    };\n\n    this.callbackfunctionforSubmitupdate = (id, status) => {\n      this.setState({\n        onTap: status\n      }, () => {\n        this.props.onUpdateTable(id);\n      });\n    };\n\n    this.callbackfunctionForonChange = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onDelete = () => {\n      console.log('listtable');\n      this.setState({});\n    };\n  }\n\n  componentWillMount() {\n    console.log('willmountnha');\n    this.props.fetchAllTables({\n      index: 1,\n      room: this.props.event.room,\n      table: this.props.event.table,\n      status: this.props.event.status\n    });\n  }\n\n  render() {\n    console.log('da vao listtable');\n    console.log(this.props.tables);\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }\n    }, this.showData(this.props.table.data, this.props.table.index));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    table: state.table,\n    event: state.event\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  console.log('dispatch');\n  return {\n    showModal: tap => {\n      dispatch(tap);\n    },\n    fetchAllTables: data => {\n      dispatch(action.acFetchTableRequest(data));\n    },\n    onDeleteTable: data => {\n      dispatch(action.acDeleteTableRequest(data));\n    } // onDeleteProduct : (id) =>{\n    //   dispatch(action.acDeleteProductsRequest(id));\n    // },\n    // onUpdateTable : (id) =>{\n    //   dispatch(action.acUpdateProductsRequest(id));\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTable);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListTable.js"],"names":["React","Component","action","connect","Modal","Emty","ListTable","onDelete","data","props","onDeleteTable","index","room","event","table","status","id","showData","datas","console","log","result","length","map","statusName","idStatus","statusClass","IdTable","TableName","IdArea","idBill","onUpdate","idtable","tables","showModal","type","mtable_ontap","mtable_text","style_event","onchangetable_idtable","text","onchangetable_name","onchangetable_idarea","callbackFunction","setState","idarea","name","BranchName","onTap","callbackfunctionforSubmitupdate","onUpdateTable","callbackfunctionForonChange","value","componentWillMount","fetchAllTables","render","mapStateToProps","state","mapDispatchToProps","dispatch","tap","acFetchTableRequest","acDeleteTableRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Modal from './ModTable';\r\n\r\nimport Emty from './Emty';\r\n\r\n\r\nclass ListTable extends Component {\r\n  \r\n\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   return true\r\n  // }\r\n\r\nonDelete = (data) =>{\r\n  this.props.onDeleteTable({\r\n                                index : 1,\r\n                                room: this.props.event.room,\r\n                                table: this.props.event.table,\r\n                                status: this.props.event.status,\r\n                                id : data.id\r\n  })\r\n}\r\n    componentWillMount(){\r\n      console.log('willmountnha');\r\n      this.props.fetchAllTables({index : 1,\r\n                                room: this.props.event.room,\r\n                                table: this.props.event.table,\r\n                                status: this.props.event.status\r\n\r\n        }\r\n     );\r\n    }\r\n    showData = (datas,id) =>\r\n    {\r\n        console.log(id);\r\n    var result = null;\r\n    if(datas.length > 0)\r\n    {\r\n      \r\n      result = datas.map((data,index) =>\r\n      {\r\n        var statusName = (data.idStatus == 1) ? 'Đang sử dụng'  : 'Trống';\r\n        var statusClass = (data.idStatus == 1) ? 'success' : 'default';\r\n     return (\r\n \r\n      <tr>\r\n      <td>{((id-1) * 5) + index+1}</td>\r\n    <td>{data.IdTable}</td>\r\n    <td>{data.TableName}</td>\r\n    <td>\r\n             \r\n             <span class={`size label label-${statusClass}`}>\r\n                {statusName}\r\n             </span>\r\n             \r\n           </td>\r\n    {/* <td>{data.idStatus}</td> */}\r\n    <td>{data.IdArea}</td>\r\n    <td>{data.idBill}</td>\r\n\r\n\r\n\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() => this.onUpdate(data.IdTable)}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete({idtable : data.IdTable})}\r\n        ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n      //  <ListDataofRoom\r\n      //  index = {index}\r\n      //  id = {((id-1) * 5) + index+1}\r\n      //  data = {data}\r\n       \r\n      //  >\r\n\r\n      //  </ListDataofRoom>\r\n \r\n      \r\n       );\r\n      })\r\n    }\r\n    else\r\n    {\r\n      return (\r\n        <Emty/>\r\n      )\r\n    }\r\n   return result\r\n    };\r\n\r\nonUpdate = (data) =>{\r\nconst tables = this.props.table.data.map((table, index)=>{\r\nif(table.IdTable == data)\r\n{\r\n  this.props.showModal({type : {\r\n    mtable_ontap : {\r\n        type : 'MODAL_HEADER_FOR_ONTAP_TABLE',\r\n        event : 'show-modal',\r\n          }, \r\n          mtable_text : {\r\n          type : 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\r\n          event : 'Chỉnh sửa dữ liệu'\r\n          },\r\n          style_event : {\r\n            type : 'STATUS_STYLE_EVENT',\r\n            status : false\r\n          },\r\n          onchangetable_idtable : {\r\n            type : 'CHANGE_TABLE_IDTABLE',\r\n            text : table.IdTable\r\n          },\r\n          onchangetable_name : {\r\n            type : 'CHANGE_TABLE_NAME',\r\n            text : table.TableName\r\n          },\r\n          onchangetable_idarea : {\r\n            type : 'CHANGE_TABLE_IDAREA',\r\n            text : table.IdArea\r\n          }\r\n\r\n        }\r\n       \r\n  \r\n  \r\n  })\r\n}\r\n})\r\n\r\n \r\n}\r\n\r\n  callbackFunction = (data) => \r\n  {\r\n  \r\n    this.setState({\r\n      id : data.id,\r\n      idarea : data.IdArea,\r\n      name : data.BranchName,\r\n      onTap : 'modal fade show-modal'\r\n    })\r\n  }\r\n  callbackfunctionforSubmitupdate = (id, status) =>{\r\n    this.setState({onTap : status}, ()=>{\r\n      this.props.onUpdateTable(id)\r\n    })\r\n\r\n  }\r\n  callbackfunctionForonChange = (name, value) =>{\r\n   \r\n    this.setState({\r\n      [name] : value\r\n    })\r\n \r\n  }\r\n onupdate\r\n   // console.log(this.props.history.match.params.id);\r\n  \r\n   // console.log(this.props.history.match.params.id);\r\n \r\n//  onDelete = (id) =>{\r\n//      this.props.onDeleteProduct(id);\r\n//  }\r\nonDelete = () =>{\r\n  console.log('listtable');\r\n  this.setState({});\r\n}\r\n  render() \r\n  \r\n  {\r\n      console.log('da vao listtable')\r\n   console.log(this.props.tables);\r\n    return (\r\n     <tbody>\r\n\t\t\t\t\t\t{this.showData(this.props.table.data, this.props.table.index)}\r\n\r\n\r\n\r\n\r\n           \r\n            \r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n  \r\n\r\n  return{\r\n   table : state.table,\r\n   event : state.event\r\n\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n    console.log('dispatch');\r\n  return {\r\n    showModal : (tap) =>{\r\n      dispatch(tap)\r\n    },\r\n    fetchAllTables : (data) =>{\r\n      dispatch(action.acFetchTableRequest(data));\r\n     \r\n    },\r\n    onDeleteTable : (data) =>{\r\n      dispatch(action.acDeleteTableRequest(data))\r\n    }\r\n    // onDeleteProduct : (id) =>{\r\n     \r\n    //   dispatch(action.acDeleteProductsRequest(id));\r\n    // },\r\n    // onUpdateTable : (id) =>{\r\n     \r\n    //   dispatch(action.acUpdateProductsRequest(id));\r\n    // }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTable);"]},"metadata":{},"sourceType":"module"}