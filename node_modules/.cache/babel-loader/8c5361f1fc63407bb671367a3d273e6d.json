{"ast":null,"code":"import * as Types from './../constants/ActionType';\nimport callApi from './../ultis/apiCaller';\n\nvar x = next => {\n  {\n    callApi('getdata', 'GET', null).then(res => {\n      console.log('fetch product');\n      console.log('da  vao action');\n      next(acFetchProducts(res.data));\n    });\n  }\n  ;\n};\n\nexport const acFetchProductsRequest = () => {\n  next = next => {\n    x(next);\n  };\n};\nexport const acInsertProductsRequest = data => {\n  console.log(data);\n  const value = 'end';\n  var status = {};\n  return next => {\n    callApi('insertdata', 'POST', data).then(res => {\n      console.log(res);\n\n      if (res.status == 200) {\n        status = {\n          status: 'success',\n          classcomponent: 'alert alert-success',\n          text: 'Thêm mới dữ liệu thành công ^-^',\n          display: 'show-alert'\n        };\n        next(acInsertProducts(res.data, status));\n        status = {\n          status: 'success',\n          classcomponent: 'alert alert-success',\n          text: 'Thêm mới dữ liệu thành công ^-^',\n          display: 'hide-alert'\n        };\n        console.log('sau disptach');\n        setTimeout(function () {\n          next(acInsertProducts(res.data, status));\n        }, 2000);\n      } else {\n        console.log('k lay duoc du lieu tu server');\n        status = {\n          status: 'error',\n          classcomponent: 'alert alert-danger',\n          text: 'Thêm mới dữ liệu thất bại ! (T-T)'\n        };\n        next(acInsertProducts([{}], status));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const acInsertProducts = (product, status) => {\n  return {\n    type: Types.INSERT_PRODUCT,\n    product,\n    status\n  };\n};\nexport const acFetchProducts = product => {\n  return {\n    type: Types.FETCH_PRODUCTS,\n    product\n  };\n};\nexport const acDeleteProductsRequest = id => {\n  return next => {\n    callApi('deletedata', 'POST', id).then(res => {\n      console.log(res.data);\n      next(actDeleteProduct(res.data));\n    });\n  };\n};\nexport const actDeleteProduct = product => {\n  return {\n    type: Types.DELETE_PRODUCT,\n    product\n  };\n};\nexport const acUpdateProductsRequest = table => {\n  return next => {\n    callApi('updatedata', 'POST', table).then(res => {\n      console.log(res);\n      next(actUpdateProduct(res.data));\n    }).catch(err => {\n      console.log(table);\n    });\n  };\n};\nexport const actUpdateProduct = product => {\n  return {\n    type: Types.UPDATE_PRODUCT,\n    product\n  };\n};\nexport const acSearchProductsRequest = name => {\n  return next => {\n    callApi('searchdata', 'POST', name).then(res => {\n      console.log(res);\n      next(acFetchProducts(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const acFetchTableRequest = data => {\n  return next => {\n    callApi('gettable', 'POST', data).then(res => {\n      console.log('fetch table');\n      console.log(res);\n      next(acFetchTable(res.data, data));\n    });\n  };\n};\nexport const acFetchTable = (tables, index) => {\n  return {\n    type: Types.FETCH_TABLES,\n    tables: {\n      data: tables.data,\n      count: tables.count,\n      index: index.index\n    }\n  };\n};\nexport const acFetchsttTableRequest = () => {\n  return next => {\n    callApi('getstt', 'get', null).then(res => {\n      console.log(res);\n      next(acFetchsttTable(res.data));\n    });\n  };\n};\nexport const acFetchsttTable = status => {\n  return {\n    type: Types.FETCH_STTTABLE,\n    status\n  };\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/actions/index.js"],"names":["Types","callApi","x","next","then","res","console","log","acFetchProducts","data","acFetchProductsRequest","acInsertProductsRequest","value","status","classcomponent","text","display","acInsertProducts","setTimeout","catch","err","product","type","INSERT_PRODUCT","FETCH_PRODUCTS","acDeleteProductsRequest","id","actDeleteProduct","DELETE_PRODUCT","acUpdateProductsRequest","table","actUpdateProduct","UPDATE_PRODUCT","acSearchProductsRequest","name","acFetchTableRequest","acFetchTable","tables","index","FETCH_TABLES","count","acFetchsttTableRequest","acFetchsttTable","FETCH_STTTABLE"],"mappings":"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","sourcesContent":["import * as Types from './../constants/ActionType';\r\nimport callApi from './../ultis/apiCaller';\r\nvar x= (next)=>{\r\n    {\r\n\r\n        callApi('getdata', 'GET', null).then(res =>{\r\n           console.log('fetch product')\r\n\r\n            console.log('da  vao action');\r\n          \r\n          next(acFetchProducts(res.data));\r\n         \r\n       });\r\n\r\n   };\r\n}\r\nexport const acFetchProductsRequest = () => {\r\n   next = (next)=>{\r\n    x(next);\r\n   }\r\n    \r\n}\r\n\r\nexport const acInsertProductsRequest = (data) => {\r\n    console.log(data);\r\n    const value = 'end';\r\n    var status  = {};\r\n    return next =>{\r\n                   \r\n\r\n         callApi('insertdata', 'POST', data).then(res =>{\r\n             console.log(res);\r\n           if(res.status == 200){\r\n\r\n             status = {\r\n                status : 'success',\r\n                classcomponent : 'alert alert-success',\r\n                text : 'Thêm mới dữ liệu thành công ^-^',\r\n                display : 'show-alert'\r\n            }\r\n            \r\n\r\n            next(acInsertProducts(res.data, status))\r\n            \r\n            status = {\r\n                status : 'success',\r\n                classcomponent : 'alert alert-success',\r\n                text : 'Thêm mới dữ liệu thành công ^-^',\r\n                display : 'hide-alert'\r\n            }\r\n                console.log('sau disptach');\r\n            setTimeout(function(){\r\n\r\n\r\n\r\n                next(acInsertProducts(res.data,status))\r\n\r\n            }, 2000);\r\n           }\r\n           else{\r\n               console.log('k lay duoc du lieu tu server')\r\n            status = {\r\n                status : 'error',\r\n                classcomponent : 'alert alert-danger',\r\n                text : 'Thêm mới dữ liệu thất bại ! (T-T)'\r\n            }\r\n            \r\n            next(acInsertProducts([{}], status));\r\n           }\r\n\r\n           \r\n          \r\n        }).catch((err) =>{console.log(err)});\r\n\r\n    };\r\n    \r\n}\r\nexport const acInsertProducts = (product, status) =>{\r\n    \r\n    return {\r\n        type : Types.INSERT_PRODUCT,\r\n        product,\r\n        status\r\n    }\r\n}\r\nexport const acFetchProducts = (product) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_PRODUCTS,\r\n        product\r\n    }\r\n}\r\nexport const acDeleteProductsRequest = (id) => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('deletedata', 'POST', id).then(res =>{\r\n             console.log(res.data);\r\n           \r\n           next(actDeleteProduct(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const actDeleteProduct = (product) =>{\r\n    return {\r\n        type : Types.DELETE_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const acUpdateProductsRequest = (table) =>{\r\n\r\n    return next =>{\r\n       \r\n        callApi('updatedata', 'POST', table).then(res =>{\r\n            console.log(res);\r\n          \r\n          next(actUpdateProduct(res.data));\r\n         \r\n       }).catch((err) => {console.log(table)})\r\n\r\n   };\r\n\r\n}\r\nexport const actUpdateProduct = (product) =>{\r\n    return {\r\n        type : Types.UPDATE_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const acSearchProductsRequest = (name) =>{\r\n\r\n    return next =>{\r\n       \r\n        callApi('searchdata', 'POST', name).then(res =>{\r\n            console.log(res);\r\n          \r\n          next(acFetchProducts(res.data));\r\n         \r\n       }).catch((err) => {console.log(err)})\r\n\r\n   };\r\n\r\n}\r\nexport const acFetchTableRequest = (data) => {\r\n   \r\n    return next =>{\r\n         callApi('gettable', 'POST',data ).then(res =>{\r\n            console.log('fetch table')\r\n\r\n             console.log(res);\r\n           \r\n           next(acFetchTable(res.data, data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acFetchTable = (tables, index) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_TABLES,\r\n        tables : {\r\n            data : tables.data,\r\n            count : tables.count,\r\n            index : index.index\r\n        }\r\n    }\r\n}\r\nexport const acFetchsttTableRequest = () => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('getstt', 'get',null ).then(res =>{\r\n             console.log(res);\r\n           \r\n           next(acFetchsttTable(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acFetchsttTable = (status) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_STTTABLE,\r\n        status\r\n    }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}