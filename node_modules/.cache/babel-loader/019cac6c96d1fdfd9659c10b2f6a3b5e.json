{"ast":null,"code":"import * as Types from './../constants/ActionType';\nimport callApi from './../ultis/apiCaller';\nexport const acFetchProductsRequest = () => {\n  return next => {\n    callApi('getdata', 'GET', null).then(res => {\n      console.log('5');\n      next(acFetchProducts(res.data));\n    });\n  };\n};\nexport const acInsertProductsRequest = data => {\n  console.log(data);\n  var status = [{}];\n  return next => {\n    callApi('insertdata', 'POST', data).then(res => {\n      console.log(res);\n\n      if (res.status == 200) {\n        status = [{\n          status: 'success',\n          classcomponent: 'alert alert-success',\n          text: 'Thêm mới dữ liệu thành công ^-^'\n        }];\n        window.$('#modal-id').modal('toggle');\n        next(acInsertProducts(res.data, status));\n        window.$('.alert-position').show();\n        setTimeout(function () {\n          window.$('.alert-position').hide();\n        }, 2000);\n      } else {\n        console.log('k lay duoc du lieu tu server');\n        status = [{\n          status: 'error',\n          classcomponent: 'alert alert-danger',\n          text: 'Thêm mới dữ liệu thất bại ! (T-T)'\n        }];\n        window.$('#modal-id').modal('toggle');\n        next(acInsertProducts([{}], status));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const acInsertProducts = (product, status) => {\n  return {\n    type: Types.INSERT_PRODUCT,\n    product,\n    status\n  };\n};\nexport const acFetchProducts = product => {\n  return {\n    type: Types.FETCH_PRODUCTS,\n    product\n  };\n};\nexport const acDeleteProductsRequest = id => {\n  return next => {\n    callApi('deletedata', 'POST', id).then(res => {\n      console.log(res.data);\n      next(actDeleteProduct(res.data));\n    });\n  };\n};\nexport const actDeleteProduct = product => {\n  return {\n    type: Types.DELETE_PRODUCT,\n    product\n  };\n};\nexport const acUpdateProductsRequest = table => {\n  return next => {\n    callApi('updatedata', 'POST', table).then(res => {\n      console.log(res);\n      next(actUpdateProduct(res.data));\n    }).catch(err => {\n      console.log(table);\n    });\n  };\n};\nexport const actUpdateProduct = product => {\n  return {\n    type: Types.UPDATE_PRODUCT,\n    product\n  };\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/actions/index.js"],"names":["Types","callApi","acFetchProductsRequest","next","then","res","console","log","acFetchProducts","data","acInsertProductsRequest","status","classcomponent","text","window","$","modal","acInsertProducts","show","setTimeout","hide","catch","err","product","type","INSERT_PRODUCT","FETCH_PRODUCTS","acDeleteProductsRequest","id","actDeleteProduct","DELETE_PRODUCT","acUpdateProductsRequest","table","actUpdateProduct","UPDATE_PRODUCT"],"mappings":"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","sourcesContent":["import * as Types from './../constants/ActionType';\r\nimport callApi from './../ultis/apiCaller';\r\nexport const acFetchProductsRequest = () => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('getdata', 'GET', null).then(res =>{\r\n             console.log('5');\r\n           \r\n           next(acFetchProducts(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acInsertProductsRequest = (data) => {\r\n    console.log(data);\r\n    var status  = [{}];\r\n    return next =>{\r\n       \r\n         callApi('insertdata', 'POST', data).then(res =>{\r\n             console.log(res);\r\n           if(res.status == 200){\r\n\r\n             status = [{\r\n                status : 'success',\r\n                classcomponent : 'alert alert-success',\r\n                text : 'Thêm mới dữ liệu thành công ^-^'\r\n            }]\r\n            window.$('#modal-id').modal('toggle'); \r\n\r\n            next(acInsertProducts(res.data, status));\r\n            window.$('.alert-position').show();\r\n\r\n            setTimeout(function(){\r\n                \twindow.$('.alert-position').hide();\r\n\r\n            }, 2000);\r\n           }\r\n           else{\r\n               console.log('k lay duoc du lieu tu server')\r\n            status = [{\r\n                status : 'error',\r\n                classcomponent : 'alert alert-danger',\r\n                text : 'Thêm mới dữ liệu thất bại ! (T-T)'\r\n            }]\r\n            window.$('#modal-id').modal('toggle'); \r\n\r\n            next(acInsertProducts([{}], status));\r\n           }\r\n\r\n           \r\n          \r\n        }).catch((err) =>{console.log(err)});\r\n\r\n    };\r\n}\r\nexport const acInsertProducts = (product, status) =>{\r\n    \r\n    return {\r\n        type : Types.INSERT_PRODUCT,\r\n        product,\r\n        status\r\n    }\r\n}\r\nexport const acFetchProducts = (product) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_PRODUCTS,\r\n        product\r\n    }\r\n}\r\nexport const acDeleteProductsRequest = (id) => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('deletedata', 'POST', id).then(res =>{\r\n             console.log(res.data);\r\n           \r\n           next(actDeleteProduct(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const actDeleteProduct = (product) =>{\r\n    return {\r\n        type : Types.DELETE_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const acUpdateProductsRequest = (table) =>{\r\n\r\n    return next =>{\r\n       \r\n        callApi('updatedata', 'POST', table).then(res =>{\r\n            console.log(res);\r\n          \r\n          next(actUpdateProduct(res.data));\r\n         \r\n       }).catch((err) => {console.log(table)})\r\n\r\n   };\r\n\r\n}\r\nexport const actUpdateProduct = (product) =>{\r\n    return {\r\n        type : Types.UPDATE_PRODUCT,\r\n        product\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}