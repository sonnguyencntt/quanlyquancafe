{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Table\\\\ListButton.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport { connect } from 'react-redux';\nimport * as action from './../../actions/index';\nimport Modal from './Modal';\n\nclass ListButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showListButton = ListButton => {\n      console.log(ListButton);\n      var result = null;\n\n      if (ListButton.length > 0) {\n        result = ListText.map((button, index) => {\n          console.log(index);\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 1\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => this.onUpdate({\n              id: button.id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 10\n            }\n          }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete({\n              id: button.id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 10\n            }\n          }, \"Delete\"))) // <ListTable\n          // key = {index}\n          // product = {table}\n          // index = {index}\n          // />\n          ;\n        });\n      }\n\n      return result;\n    };\n  }\n\n  //   shouldComponentUpdate(nextProps, nextState){\n  //     console.log(JSON.stringify(nextProps.products));\n  //     console.log(JSON.stringify(this.props.products));\n  //     // if(JSON.stringify(nextProps.products) === JSON.stringify(this.props.products) ){\n  //     //   return false;\n  //     // }\n  //     return true\n  //   }\n  componentWillMount() {\n    this.props.fetchAllProducts();\n  } // console.log(this.props.history.match.params.id);\n\n\n  // console.log(this.props.history.match.params.id);\n  //  onUpdate = (id) =>{\n  //   window.$('#modal-update').modal('show');\n  //   this.setState({\n  //     id : id\n  //   })\n  //  }\n  //  onDelete = (id) =>{\n  //      this.props.onDeleteProduct(id);\n  //  }\n  render() {\n    console.log('da vao listtext');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }\n    }, this.showListButton(this.props.products));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.products);\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  console.log('dispatch');\n  return {\n    fetchAllProducts: () => {\n      dispatch(action.acFetchProductsRequest());\n    },\n    onDeleteProduct: id => {\n      dispatch(action.acDeleteProductsRequest(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListButton);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListButton.js"],"names":["React","Component","connect","action","Modal","ListButton","showListButton","console","log","result","length","ListText","map","button","index","onUpdate","id","onDelete","componentWillMount","props","fetchAllProducts","render","products","mapStateToProps","state","mapDispatchToProps","dispatch","acFetchProductsRequest","onDeleteProduct","acDeleteProductsRequest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAMA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAkBhCK,cAlBgC,GAkBdD,UAAD,IACjB;AACFE,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACC,UAAII,MAAM,GAAG,IAAb;;AACA,UAAGJ,UAAU,CAACK,MAAX,GAAoB,CAAvB,EACA;AAEED,QAAAA,MAAM,GAAGE,QAAQ,CAACC,GAAT,CAAa,CAACC,MAAD,EAAQC,KAAR,KACtB;AACFP,UAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,8BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEG;AAAQ,YAAA,IAAI,EAAC,QAAb;AACA,YAAA,KAAK,EAAC,iBADN;AACyB,YAAA,OAAO,EAAI,MAAM,KAAKC,QAAL,CAAc;AAACC,cAAAA,EAAE,EAAGH,MAAM,CAACG;AAAb,aAAd,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFH,eAKG;AAAQ,YAAA,IAAI,EAAC,QAAb;AACA,YAAA,KAAK,EAAC,8BADN;AAEA,YAAA,OAAO,EAAI,MAAM,KAAKC,QAAL,CAAc;AAACD,cAAAA,EAAE,EAAGH,MAAM,CAACG;AAAb,aAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALH,CAHN,CADE,CAmBC;AACA;AACA;AACA;AAEA;AAxBD;AA0BG,SA7BQ,CAAT;AA8BD;;AACF,aAAOP,MAAP;AACG,KAzD+B;AAAA;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGES,EAAAA,kBAAkB,GAAE;AACpB,SAAKC,KAAL,CAAWC,gBAAX;AACA,GAfiC,CAiBhC;;;AAyCA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,MAAM,GAEN;AAEFd,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACI,wBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKF,cAAL,CAAoB,KAAKa,KAAL,CAAWG,QAA/B,CADF,CADI;AAWH;;AApFkC;;AAsFnC,MAAOC,eAAe,GAAGC,KAAK,IAAG;AAC/BjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAK,CAACF,QAAlB;AAEA,SAAM;AACJA,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AADZ,GAAN;AAGD,CAND;;AASA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWP,KAAX,KAAoB;AAC3CZ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACF,SAAO;AACLY,IAAAA,gBAAgB,EAAG,MAAK;AACtBM,MAAAA,QAAQ,CAACvB,MAAM,CAACwB,sBAAP,EAAD,CAAR;AACD,KAHI;AAILC,IAAAA,eAAe,EAAIZ,EAAD,IAAO;AAEvBU,MAAAA,QAAQ,CAACvB,MAAM,CAAC0B,uBAAP,CAA+Bb,EAA/B,CAAD,CAAR;AACD;AAPI,GAAP;AASD,CAXD;;AAcA,eAAed,OAAO,CAACqB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CpB,UAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport {connect} from 'react-redux';\r\nimport * as action from './../../actions/index';\r\nimport Modal from './Modal'\r\n\r\n\r\n\r\n\r\n\r\nclass ListButton extends Component {\r\n  \r\n\r\n//   shouldComponentUpdate(nextProps, nextState){\r\n//     console.log(JSON.stringify(nextProps.products));\r\n//     console.log(JSON.stringify(this.props.products));\r\n//     // if(JSON.stringify(nextProps.products) === JSON.stringify(this.props.products) ){\r\n//     //   return false;\r\n//     // }\r\n//     return true\r\n//   }\r\n\r\n \r\n  componentWillMount(){\r\n\t\tthis.props.fetchAllProducts();\r\n\t}\r\n\t\r\n   // console.log(this.props.history.match.params.id);\r\n   showListButton = (ListButton) =>\r\n   {\r\n console.log(ListButton);\r\n\t var result = null;\r\n\t if(ListButton.length > 0)\r\n\t {\r\n\t   \r\n\t   result = ListText.map((button,index) =>\r\n\t   {\r\n\t\tconsole.log(index);\r\n\t\treturn (\r\n<div>\r\n      \r\n      \r\n      <td>\r\n         \r\n         <button type=\"button\" \r\n         class=\"btn btn-primary\"  onClick = {() => this.onUpdate({id : button.id})}>Update</button>\r\n         \r\n         <button type=\"button\" \r\n         class=\"btn btn-danger margin-button\"\r\n         onClick = {() => this.onDelete({id : button.id})}\r\n         >Delete</button>\r\n         \r\n         \r\n\r\n      </td>\r\n      </div>\r\n\r\n\t\t\t// <ListTable\r\n\t\t\t// key = {index}\r\n\t\t\t// product = {table}\r\n\t\t\t// index = {index}\r\n\t\t\t\r\n\t\t\t// />\r\n\t\t  );\r\n\t   })\r\n\t }\r\n\treturn result\r\n   };\r\n   // console.log(this.props.history.match.params.id);\r\n//  onUpdate = (id) =>{\r\n//   window.$('#modal-update').modal('show');\r\n//   this.setState({\r\n//     id : id\r\n//   })\r\n//  }\r\n//  onDelete = (id) =>{\r\n//      this.props.onDeleteProduct(id);\r\n//  }\r\n  render() \r\n  \r\n  {\r\n      \r\nconsole.log('da vao listtext');\r\n    return (\r\n<div>\r\n\t{this.showListButton(this.props.products)}\r\n    </div>\r\n\r\n            \r\n\t\t\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\nconst  mapStateToProps = state =>{\r\n  console.log(state.products);\r\n\r\n  return{\r\n    products: state.products\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n    console.log('dispatch');\r\n  return {\r\n    fetchAllProducts : () =>{\r\n      dispatch(action.acFetchProductsRequest());\r\n    },\r\n    onDeleteProduct : (id) =>{\r\n     \r\n      dispatch(action.acDeleteProductsRequest(id));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListButton);"]},"metadata":{},"sourceType":"module"}