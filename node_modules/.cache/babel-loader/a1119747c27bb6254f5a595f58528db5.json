{"ast":null,"code":"import * as Types from './../constants/ActionType';\nimport callApi from './../ultis/apiCaller';\nexport const acFetchProductsRequest = () => {\n  return next => {\n    console.log('fetch product');\n    callApi('getdata', 'GET', null).then(res => {\n      console.log('da  vao action');\n      next(acFetchProducts(res.data));\n    });\n  };\n};\nexport const acInsertProductsRequest = data => {\n  console.log(data);\n  const value = 'end';\n  var status = {};\n  return next => {\n    callApi('insertdata', 'POST', data).then(res => {\n      console.log(res);\n\n      if (res.status == 200) {\n        status = {\n          status: 'success',\n          classcomponent: 'alert alert-success',\n          text: 'Thêm mới dữ liệu thành công ^-^',\n          display: 'show-alert'\n        };\n        next(acInsertProducts(res.data, status));\n        status = {\n          status: 'success',\n          classcomponent: 'alert alert-success',\n          text: 'Thêm mới dữ liệu thành công ^-^',\n          display: 'hide-alert'\n        };\n        console.log('sau disptach');\n        setTimeout(function () {\n          next(acInsertProducts(res.data, status));\n        }, 2000);\n      } else {\n        console.log('k lay duoc du lieu tu server');\n        status = {\n          status: 'error',\n          classcomponent: 'alert alert-danger',\n          text: 'Thêm mới dữ liệu thất bại ! (T-T)'\n        };\n        next(acInsertProducts([{}], status));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const acInsertProducts = (product, status) => {\n  return {\n    type: Types.INSERT_PRODUCT,\n    product,\n    status\n  };\n};\nexport const acFetchProducts = product => {\n  return {\n    type: Types.FETCH_PRODUCTS,\n    product\n  };\n};\nexport const acDeleteProductsRequest = id => {\n  return next => {\n    callApi('deletedata', 'POST', id).then(res => {\n      console.log(res.data);\n      next(actDeleteProduct(res.data));\n    });\n  };\n};\nexport const actDeleteProduct = product => {\n  return {\n    type: Types.DELETE_PRODUCT,\n    product\n  };\n};\nexport const acUpdateProductsRequest = table => {\n  return next => {\n    callApi('updatedata', 'POST', table).then(res => {\n      console.log(res);\n      next(actUpdateProduct(res.data));\n    }).catch(err => {\n      console.log(table);\n    });\n  };\n};\nexport const actUpdateProduct = product => {\n  return {\n    type: Types.UPDATE_PRODUCT,\n    product\n  };\n};\nexport const acSearchProductsRequest = name => {\n  return next => {\n    callApi('searchdata', 'POST', name).then(res => {\n      console.log(res);\n      next(acFetchProducts(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const acFetchTableRequest = data => {\n  return next => {\n    console.log('fetch table');\n    callApi('gettable', 'POST', data).then(res => {\n      console.log(res);\n      next(acFetchTable(res.data, data));\n    });\n  };\n};\nexport const acFetchTable = (tables, index) => {\n  return {\n    type: Types.FETCH_TABLES,\n    tables: {\n      data: tables.data,\n      count: tables.count,\n      index: index.index\n    }\n  };\n};\nexport const acFetchsttTableRequest = () => {\n  return next => {\n    callApi('getstt', 'get', null).then(res => {\n      console.log(res);\n      next(acFetchsttTable(res.data));\n    });\n  };\n};\nexport const acFetchsttTable = status => {\n  return {\n    type: Types.FETCH_STTTABLE,\n    status\n  };\n};","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/actions/index.js"],"names":["Types","callApi","acFetchProductsRequest","next","console","log","then","res","acFetchProducts","data","acInsertProductsRequest","value","status","classcomponent","text","display","acInsertProducts","setTimeout","catch","err","product","type","INSERT_PRODUCT","FETCH_PRODUCTS","acDeleteProductsRequest","id","actDeleteProduct","DELETE_PRODUCT","acUpdateProductsRequest","table","actUpdateProduct","UPDATE_PRODUCT","acSearchProductsRequest","name","acFetchTableRequest","acFetchTable","tables","index","FETCH_TABLES","count","acFetchsttTableRequest","acFetchsttTable","FETCH_STTTABLE"],"mappings":"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","sourcesContent":["import * as Types from './../constants/ActionType';\r\nimport callApi from './../ultis/apiCaller';\r\nexport const acFetchProductsRequest = () => {\r\n    return next =>{\r\n        console.log('fetch product')\r\n\r\n         callApi('getdata', 'GET', null).then(res =>{\r\n             console.log('da  vao action');\r\n           \r\n           next(acFetchProducts(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acInsertProductsRequest = (data) => {\r\n    console.log(data);\r\n    const value = 'end';\r\n    var status  = {};\r\n    return next =>{\r\n                   \r\n\r\n         callApi('insertdata', 'POST', data).then(res =>{\r\n             console.log(res);\r\n           if(res.status == 200){\r\n\r\n             status = {\r\n                status : 'success',\r\n                classcomponent : 'alert alert-success',\r\n                text : 'Thêm mới dữ liệu thành công ^-^',\r\n                display : 'show-alert'\r\n            }\r\n            \r\n\r\n            next(acInsertProducts(res.data, status))\r\n            \r\n            status = {\r\n                status : 'success',\r\n                classcomponent : 'alert alert-success',\r\n                text : 'Thêm mới dữ liệu thành công ^-^',\r\n                display : 'hide-alert'\r\n            }\r\n                console.log('sau disptach');\r\n            setTimeout(function(){\r\n\r\n\r\n\r\n                next(acInsertProducts(res.data,status))\r\n\r\n            }, 2000);\r\n           }\r\n           else{\r\n               console.log('k lay duoc du lieu tu server')\r\n            status = {\r\n                status : 'error',\r\n                classcomponent : 'alert alert-danger',\r\n                text : 'Thêm mới dữ liệu thất bại ! (T-T)'\r\n            }\r\n            \r\n            next(acInsertProducts([{}], status));\r\n           }\r\n\r\n           \r\n          \r\n        }).catch((err) =>{console.log(err)});\r\n\r\n    };\r\n    \r\n}\r\nexport const acInsertProducts = (product, status) =>{\r\n    \r\n    return {\r\n        type : Types.INSERT_PRODUCT,\r\n        product,\r\n        status\r\n    }\r\n}\r\nexport const acFetchProducts = (product) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_PRODUCTS,\r\n        product\r\n    }\r\n}\r\nexport const acDeleteProductsRequest = (id) => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('deletedata', 'POST', id).then(res =>{\r\n             console.log(res.data);\r\n           \r\n           next(actDeleteProduct(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const actDeleteProduct = (product) =>{\r\n    return {\r\n        type : Types.DELETE_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const acUpdateProductsRequest = (table) =>{\r\n\r\n    return next =>{\r\n       \r\n        callApi('updatedata', 'POST', table).then(res =>{\r\n            console.log(res);\r\n          \r\n          next(actUpdateProduct(res.data));\r\n         \r\n       }).catch((err) => {console.log(table)})\r\n\r\n   };\r\n\r\n}\r\nexport const actUpdateProduct = (product) =>{\r\n    return {\r\n        type : Types.UPDATE_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const acSearchProductsRequest = (name) =>{\r\n\r\n    return next =>{\r\n       \r\n        callApi('searchdata', 'POST', name).then(res =>{\r\n            console.log(res);\r\n          \r\n          next(acFetchProducts(res.data));\r\n         \r\n       }).catch((err) => {console.log(err)})\r\n\r\n   };\r\n\r\n}\r\nexport const acFetchTableRequest = (data) => {\r\n   \r\n    return next =>{\r\n       console.log('fetch table')\r\n         callApi('gettable', 'POST',data ).then(res =>{\r\n             console.log(res);\r\n           \r\n           next(acFetchTable(res.data, data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acFetchTable = (tables, index) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_TABLES,\r\n        tables : {\r\n            data : tables.data,\r\n            count : tables.count,\r\n            index : index.index\r\n        }\r\n    }\r\n}\r\nexport const acFetchsttTableRequest = () => {\r\n   \r\n    return next =>{\r\n       \r\n         callApi('getstt', 'get',null ).then(res =>{\r\n             console.log(res);\r\n           \r\n           next(acFetchsttTable(res.data));\r\n          \r\n        });\r\n\r\n    };\r\n}\r\nexport const acFetchsttTable = (status) =>{\r\n    \r\n    return {\r\n        type : Types.FETCH_STTTABLE,\r\n        status\r\n    }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}