{"ast":null,"code":"// import React, { Component } from 'react';\n// // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// // import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n// import * as action from '../../actions/index';\n// import {connect} from 'react-redux';\n// class ListData extends Component {\n//   // shouldComponentUpdate(nextProps, nextState){\n//   //     if(JSON.stringify(this.props.data) === JSON.stringify(nextProps.data))\n//   //     {\n//   //         return false\n//   //     }\n//   //   return true\n//   // }\n//   onUpdate = (id) =>{\n//       this.props.callback(id);\n//   }\n//   tapFunction = (id) =>{\n//       const room = this.props.rooms.map((room,index) =>\n//       {\n//         if(room.id === id){\n//           this.props.OntapRoom( {type : {\n//                   mroom_ontap : {\n//                       type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\n//                       event : 'show-modal',\n//                         }, \n//                   mroom_text :{\n//                       type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n//                       event : 'Chỉnh sửa dữ liệu'},\n//                   inputIdRoom :{\n//                     type : 'CHANGE_ROOM_IDROOM',\n//                     data : room.IdArea\n//                   },\n//                   inputNameRoom : {\n//                     type : 'CHANGE_ROOM_NAMEROOM',\n//                     data : room.BranchName\n//                   }\n//                     }\n//             })\n//         }\n//         else{\n//           return;\n//         }\n//       })\n//   }\n// //   callbackFunction = (dataofButton) => \n// //   {\n// //     this.setState({id : dataofButton})\n// //   }\n//    // console.log(this.props.history.match.params.id);\n//    // console.log(this.props.history.match.params.id);\n//  onDelete = (id) =>{\n//      this.props.onDeleteRoom(id);\n//  }\n//   render() \n//   {\n//       var {data, index} = this.props\n//       console.log('da vao listdata');\n//       console.log(this.props);\n//     return (\n//         <tr>\n//           <td>{index}</td>\n//         <td>{data.IdArea}</td>\n//         <td>{data.BranchName}</td>\n//         <td>\n//             <button type=\"button\" \n//             class=\"btn btn-primary\"  onClick = {() =>{\n//               this.tapFunction(data.id)\n//             //   this.props.OntapRoom(\n//             //     {type : {\n//             //       mroom_ontap : {\n//             //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\n//             //           event : 'show-modal',\n//             //             }, \n//             //       mroom_text :{\n//             //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\n//             //           event : 'Chỉnh sửa dữ liệu'}\n//             //         }\n//             // })\n//             }}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\n//             <button type=\"button\" \n//             class=\"btn btn-danger margin-button\"\n//             onClick = {() => this.onDelete({id : data.id})}\n//             ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\n//         </td>\n//       </tr>\n//     )\n// }\n// }\n// const  mapStateToProps = state =>{\n//   console.log('vao map trong listdata');\n//   return{\n//     rooms: state.rooms\n//   }\n// }\n// const mapDispatchToProps = (dispatch, props) =>{\n//   console.log('dispatch');\n// return {\n//   onDeleteRoom : (id) =>{\n//     dispatch(action.acDeleteRoomsRequest(id));\n//   },\n//   OntapRoom : (data) =>{\n// \t\tdispatch(data)\n// \t},\n// }\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(ListData);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Table/ListData.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA","sourcesContent":["// import React, { Component } from 'react';\r\n\r\n// // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// // import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\n// import * as action from '../../actions/index';\r\n// import {connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n// class ListData extends Component {\r\n  \r\n\r\n//   // shouldComponentUpdate(nextProps, nextState){\r\n//   //     if(JSON.stringify(this.props.data) === JSON.stringify(nextProps.data))\r\n//   //     {\r\n//   //         return false\r\n//   //     }\r\n//   //   return true\r\n//   // }\r\n\r\n//   onUpdate = (id) =>{\r\n\r\n//       this.props.callback(id);\r\n//   }\r\n//   tapFunction = (id) =>{\r\n   \r\n//       const room = this.props.rooms.map((room,index) =>\r\n//       {\r\n//         if(room.id === id){\r\n//           this.props.OntapRoom( {type : {\r\n//                   mroom_ontap : {\r\n//                       type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n//                       event : 'show-modal',\r\n//                         }, \r\n//                   mroom_text :{\r\n//                       type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n//                       event : 'Chỉnh sửa dữ liệu'},\r\n//                   inputIdRoom :{\r\n//                     type : 'CHANGE_ROOM_IDROOM',\r\n//                     data : room.IdArea\r\n//                   },\r\n//                   inputNameRoom : {\r\n//                     type : 'CHANGE_ROOM_NAMEROOM',\r\n//                     data : room.BranchName\r\n//                   }\r\n//                     }\r\n          \r\n//             })\r\n//         }\r\n//         else{\r\n//           return;\r\n//         }\r\n//       })\r\n    \r\n  \r\n  \r\n//   }\r\n  \r\n// //   callbackFunction = (dataofButton) => \r\n// //   {\r\n// //     this.setState({id : dataofButton})\r\n// //   }\r\n//    // console.log(this.props.history.match.params.id);\r\n \r\n//    // console.log(this.props.history.match.params.id);\r\n \r\n//  onDelete = (id) =>{\r\n//      this.props.onDeleteRoom(id);\r\n//  }\r\n//   render() \r\n  \r\n//   {\r\n//       var {data, index} = this.props\r\n//       console.log('da vao listdata');\r\n//       console.log(this.props);\r\n\r\n//     return (\r\n//         <tr>\r\n//           <td>{index}</td>\r\n//         <td>{data.IdArea}</td>\r\n//         <td>{data.BranchName}</td>\r\n//         <td>\r\n            \r\n             \r\n//             <button type=\"button\" \r\n//             class=\"btn btn-primary\"  onClick = {() =>{\r\n//               this.tapFunction(data.id)\r\n//             //   this.props.OntapRoom(\r\n//             //     {type : {\r\n//             //       mroom_ontap : {\r\n//             //           type : 'MODAL_HEADER_FOR_ONTAP_ROOM',\r\n//             //           event : 'show-modal',\r\n//             //             }, \r\n//             //       mroom_text :{\r\n//             //           type : 'MODAL_HEADER_FOR_INSERT_UPDATE_ROOM',\r\n//             //           event : 'Chỉnh sửa dữ liệu'}\r\n//             //         }\r\n          \r\n//             // })\r\n//             }}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n            \r\n//             <button type=\"button\" \r\n//             class=\"btn btn-danger margin-button\"\r\n//             onClick = {() => this.onDelete({id : data.id})}\r\n//             ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n            \r\n            \r\n    \r\n         \r\n//         </td>\r\n    \r\n//       </tr>\r\n       \r\n//     )\r\n    \r\n\r\n// }\r\n// }\r\n// const  mapStateToProps = state =>{\r\n//   console.log('vao map trong listdata');\r\n\r\n//   return{\r\n//     rooms: state.rooms\r\n//   }\r\n// }\r\n// const mapDispatchToProps = (dispatch, props) =>{\r\n//   console.log('dispatch');\r\n// return {\r\n  \r\n//   onDeleteRoom : (id) =>{\r\n   \r\n//     dispatch(action.acDeleteRoomsRequest(id));\r\n//   },\r\n//   OntapRoom : (data) =>{\r\n// \t\tdispatch(data)\r\n// \t},\r\n\r\n// }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps,mapDispatchToProps)(ListData); "]},"metadata":{},"sourceType":"module"}