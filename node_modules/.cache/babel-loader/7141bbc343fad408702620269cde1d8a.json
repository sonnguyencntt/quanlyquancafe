{"ast":null,"code":"import * as Types from './../../constants/ActionType';\nimport callApi from './../../ultis/apiCaller';\n\nconst initialState = () => {\n  return callApi('getdata', 'GET', null).then(res => {\n    return res.data;\n  });\n};\n\nconst products = (state = initialState(), action) => {\n  var getStateFromPromise = [{}];\n  state.then(res => {\n    getStateFromPromise = res;\n  });\n  let newState = [...getStateFromPromise];\n\n  switch (action.type) {\n    case Types.INSERT_PRODUCT:\n      newState = action.product;\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default products;","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/reducers/Table/products.js"],"names":["Types","callApi","initialState","then","res","data","products","state","action","getStateFromPromise","newState","type","INSERT_PRODUCT","product"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,YAAY,GAAG,MACrB;AAEE,SAAOD,OAAO,CAAC,SAAD,EAAY,KAAZ,EAAmB,IAAnB,CAAP,CAAgCE,IAAhC,CAAqCC,GAAG,IAAG;AAChD,WAAOA,GAAG,CAACC,IAAX;AACH,GAFQ,CAAP;AAID,CAPD;;AAUA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGL,YAAY,EAArB,EAAyBM,MAAzB,KACjB;AACE,MAAIC,mBAAmB,GAAG,CAAC,EAAD,CAA1B;AACAF,EAAAA,KAAK,CAACJ,IAAN,CAAYC,GAAD,IAAQ;AAACK,IAAAA,mBAAmB,GAAGL,GAAtB;AAA0B,GAA9C;AACA,MAAIM,QAAQ,GAAG,CAAC,GAAGD,mBAAJ,CAAf;;AACA,UAAOD,MAAM,CAACG,IAAd;AACE,SAAKX,KAAK,CAACY,cAAX;AACIF,MAAAA,QAAQ,GAAGF,MAAM,CAACK,OAAlB;AACA,aAAOH,QAAP;;AACF;AAAS,aAAOA,QAAP;AAJb;AAMD,CAXD;;AAYA,eAAeJ,QAAf","sourcesContent":["import * as Types from './../../constants/ActionType';\r\nimport callApi from './../../ultis/apiCaller';\r\n\r\nconst initialState = () =>\r\n{\r\n  \r\n  return callApi('getdata', 'GET', null).then(res =>{\r\n    return res.data;\r\n});\r\n  \r\n}\r\n\r\n\r\nconst products = (state = initialState(), action) =>\r\n{\r\n  var getStateFromPromise = [{}];\r\n  state.then((res) =>{getStateFromPromise = res})\r\n  let newState = [...getStateFromPromise];\r\n  switch(action.type){ \r\n    case Types.INSERT_PRODUCT :\r\n        newState = action.product;\r\n        return newState;    \r\n      default: return newState;\r\n  }\r\n}\r\nexport default products;"]},"metadata":{},"sourceType":"module"}