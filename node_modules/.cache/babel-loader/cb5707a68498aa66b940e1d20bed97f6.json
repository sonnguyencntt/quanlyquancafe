{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\pages\\\\Table\\\\Table.js\";\nimport React, { Component } from 'react';\nimport Menu from './../../components/Menu/Menu';\nimport Header from './../../components/Menu/Header';\nimport Content from '../../components/Table/Content';\nimport './../../../node_modules/bootstrap/dist/css/bootstrap.min.css'; // import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n// import $ from 'jquery';\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n//for bootstrap.min.js\n//bootstrap-theme file for bootstrap 3 only\n// import './../../../bootstrap/dist/css/bootstrap-theme.min.css';\n// import './../../../bootstrap/dist/css/bootstrap.min.css';\n// import './../../../bootstrap/dist/js/bootstrap.min.js';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlushed: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(this.props.dealLoaded); // check current props and nextPros of dealLoaded flag. If dealLoaded was false, and is true, which means the data is fetched, then we should reset isFlushed\n\n    if (!this.props.dealLoaded && nextProps.dealLoaded) {\n      this.setState({\n        isFlushed: false\n      });\n    } // since we assigned the location.state in <Link>, if we see this prop, and the data is not flushed yet, then flush data, in this case we call loadDeals(), which is a redux action\n\n\n    if (!this.state.isFlushed && nextProps.location.state === 'flushDeal') {\n      this.setState({\n        isFlushed: true\n      }, () => this.props.loadDeals());\n    }\n  } // console.log(this.props.history.match.params.id);\n\n\n  render() {\n    console.log(\"da vao page chính\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row sidebar-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-2 col-sm-2 col-md-2 col-lg-2 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-2 col-sm-2 col-md-2 col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }\n    })));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/pages/Table/Table.js"],"names":["React","Component","Menu","Header","Content","Table","constructor","props","state","isFlushed","componentWillReceiveProps","nextProps","console","log","dealLoaded","setState","location","loadDeals","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,8DAAP,C,CACA;AAEA;AACA;AACA;AAEC;AACD;AACA;AACA;AACA;;AAOA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAE5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAG;AADD,KAAb;AAGD;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,UAAvB,EADmC,CAEnC;;AACA,QAAI,CAAC,KAAKP,KAAL,CAAWO,UAAZ,IAA0BH,SAAS,CAACG,UAAxC,EAAoD;AAClD,WAAKC,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAPkC,CAQnC;;;AACA,QAAI,CAAC,KAAKD,KAAL,CAAWC,SAAZ,IAAyBE,SAAS,CAACK,QAAV,CAAmBR,KAAnB,KAA6B,WAA1D,EACA;AACE,WAAKO,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE;AADC,OAAd,EAEG,MAAM,KAAKF,KAAL,CAAWU,SAAX,EAFT;AAGD;AACF,GAvB2B,CAwB3B;;;AAEDC,EAAAA,MAAM,GAEN;AACEN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,wBAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAIA;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAK,MAAA,KAAK,EAAC,iDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAMI;AAAK,MAAA,KAAK,EAAC,qCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFA,eAkBA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBA,CAJA,CAFI;AAkCD;;AAhE2B;;AAoE9B,eAAeR,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Menu from './../../components/Menu/Menu';\r\nimport Header from './../../components/Menu/Header';\r\nimport Content from '../../components/Table/Content';\r\nimport './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\n\r\n// import $ from 'jquery';\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\n\r\n //for bootstrap.min.js\r\n//bootstrap-theme file for bootstrap 3 only\r\n// import './../../../bootstrap/dist/css/bootstrap-theme.min.css';\r\n// import './../../../bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../bootstrap/dist/js/bootstrap.min.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Table extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFlushed : false\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(this.props.dealLoaded);\r\n    // check current props and nextPros of dealLoaded flag. If dealLoaded was false, and is true, which means the data is fetched, then we should reset isFlushed\r\n    if (!this.props.dealLoaded && nextProps.dealLoaded) {\r\n      this.setState({\r\n        isFlushed: false\r\n      });\r\n    }\r\n    // since we assigned the location.state in <Link>, if we see this prop, and the data is not flushed yet, then flush data, in this case we call loadDeals(), which is a redux action\r\n    if (!this.state.isFlushed && nextProps.location.state === 'flushDeal')\r\n    {\r\n      this.setState({\r\n        isFlushed: true,\r\n      }, () => this.props.loadDeals());\r\n    }\r\n  }\r\n   // console.log(this.props.history.match.params.id);\r\n \r\n  render() \r\n  \r\n  {\r\n    console.log(\"da vao page chính\");\r\n    return (\r\n    \r\n<div>\r\n  \r\n<Header/>\r\n\r\n<div class=\"row sidebar-row\">\r\n\r\n<div class=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 full-height\"  >\r\n\r\n\r\n\t\t\r\n\t\t\t\t<Menu/>\r\n\t\r\n    <div class=\"col-xs-2 col-sm-2 col-md-2 col-lg-2\"  >\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\t\r\n</div>\r\n\r\n<Content/>\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n   \r\n\r\n   \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}