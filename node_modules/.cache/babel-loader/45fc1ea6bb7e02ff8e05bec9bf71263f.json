{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doan1\\\\QuanLyQuanCafe\\\\ql_cafe\\\\src\\\\components\\\\Customer\\\\ListTable.js\";\nimport React, { Component } from 'react'; // import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\n\nimport * as action from '../../actions/index';\nimport { connect } from 'react-redux';\nimport Emty from './Emty';\n\nclass ListTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = data => {\n      this.props.onDeleteTable({\n        index: 1,\n        room: this.props.event.room,\n        table: this.props.event.table,\n        status: this.props.event.status,\n        idtable: data,\n        type: 'TABLE'\n      });\n    };\n\n    this.showData = (datas, id) => {\n      var result = null;\n\n      if (datas.length > 0) {\n        result = datas.map((data, index) => {\n          var statusName = data.idStatus == 1 ? 'Đang sử dụng' : 'Trống';\n          var statusClass = data.idStatus == 1 ? 'success' : 'default';\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 7\n            }\n          }, (id - 1) * 5 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }\n          }, data.IdTable), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }\n          }, data.TableName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            class: `size label label-${statusClass}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 14\n            }\n          }, statusName)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 5\n            }\n          }, data.IdArea), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 5\n            }\n          }, data.idBill), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://dulichvietnam.com.vn/data/anh(17).jpg\",\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: () => this.onUpdate(data.IdTable),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 80\n            }\n          }), \"\\xA0\\xA0Update\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger margin-button\",\n            onClick: () => this.onDelete(data.IdTable),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-trash\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 10\n            }\n          }), \"\\xA0\\xA0Delete\")));\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Emty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return result;\n    };\n\n    this.onUpdate = data => {\n      const tables = this.props.table.data.map((table, index) => {\n        if (table.IdTable == data) {\n          this.props.showModal({\n            type: {\n              mtable_ontap: {\n                type: 'MODAL_HEADER_FOR_ONTAP_TABLE',\n                event: 'show-modal'\n              },\n              mtable_text: {\n                type: 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\n                event: 'Chỉnh sửa dữ liệu'\n              },\n              style_event: {\n                type: 'STATUS_STYLE_EVENT',\n                status: false\n              },\n              onchangetable_idtable: {\n                type: 'CHANGE_TABLE_IDTABLE',\n                text: table.IdTable\n              },\n              onchangetable_name: {\n                type: 'CHANGE_TABLE_NAME',\n                text: table.TableName\n              },\n              onchangetable_idarea: {\n                type: 'CHANGE_TABLE_IDAREA',\n                text: table.IdArea\n              }\n            }\n          });\n        }\n      });\n    };\n\n    this.callbackFunction = data => {\n      this.setState({\n        id: data.id,\n        idarea: data.IdArea,\n        name: data.BranchName,\n        onTap: 'modal fade show-modal'\n      });\n    };\n\n    this.callbackfunctionforSubmitupdate = (id, status) => {\n      this.setState({\n        onTap: status\n      }, () => {\n        this.props.onUpdateTable(id);\n      });\n    };\n\n    this.callbackfunctionForonChange = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchAllTables({\n      index: 1,\n      room: this.props.event.room,\n      table: this.props.event.table,\n      status: this.props.event.status,\n      type: 'TABLE'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 6\n      }\n    }, this.showData(this.props.table.data, this.props.table.index));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    table: state.table,\n    event: state.event\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    showModal: tap => {\n      dispatch(tap);\n    },\n    fetchAllTables: data => {\n      dispatch(action.acFetchTableRequest(data));\n    },\n    onDeleteTable: data => {\n      dispatch(action.acDeleteTableRequest(data));\n    } // onDeleteProduct : (id) =>{\n    //   dispatch(action.acDeleteProductsRequest(id));\n    // },\n    // onUpdateTable : (id) =>{\n    //   dispatch(action.acUpdateProductsRequest(id));\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTable);","map":{"version":3,"sources":["C:/Doan1/QuanLyQuanCafe/ql_cafe/src/components/Customer/ListTable.js"],"names":["React","Component","action","connect","Emty","ListTable","onDelete","data","props","onDeleteTable","index","room","event","table","status","idtable","type","showData","datas","id","result","length","map","statusName","idStatus","statusClass","IdTable","TableName","IdArea","idBill","onUpdate","tables","showModal","mtable_ontap","mtable_text","style_event","onchangetable_idtable","text","onchangetable_name","onchangetable_idarea","callbackFunction","setState","idarea","name","BranchName","onTap","callbackfunctionforSubmitupdate","onUpdateTable","callbackfunctionForonChange","value","componentWillMount","fetchAllTables","render","mapStateToProps","state","mapDispatchToProps","dispatch","tap","acFetchTableRequest","acDeleteTableRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import './../../../node_modules/bootstrap/dist/js/bootstrap.min';\r\nimport * as action from '../../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Emty from './Emty';\r\n\r\n\r\nclass ListTable extends Component {\r\n  \r\n\r\n  // shouldComponentUpdate(nextProps, nextState)\r\n\t// {\r\n  //  if((JSON.stringify(nextProps.table.data) == JSON.stringify(this.props.table.data)) && (nextProps.table.index == this.props.table.index))\r\n\t// \t{\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n\t// }\r\n\r\nonDelete = (data) =>{\r\n  this.props.onDeleteTable({\r\n                                index : 1,\r\n                                room: this.props.event.room,\r\n                                table: this.props.event.table,\r\n                                status: this.props.event.status,\r\n                                idtable : data,\r\n                                type : 'TABLE'\r\n  })\r\n}\r\n    componentWillMount(){\r\n      this.props.fetchAllTables({index : 1,\r\n                                room: this.props.event.room,\r\n                                table: this.props.event.table,\r\n                                status: this.props.event.status,\r\n                                type : 'TABLE',\r\n\r\n        }\r\n     );\r\n    }\r\n    showData = (datas,id) =>\r\n    {\r\n    var result = null;\r\n    if(datas.length > 0)\r\n    {\r\n      \r\n      result = datas.map((data,index) =>\r\n      {\r\n        var statusName = (data.idStatus == 1) ? 'Đang sử dụng'  : 'Trống';\r\n        var statusClass = (data.idStatus == 1) ? 'success' : 'default';\r\n     return (\r\n \r\n      <tr>\r\n      <td>{((id-1) * 5) + index+1}</td>\r\n    <td>{data.IdTable}</td>\r\n    <td>{data.TableName}</td>\r\n    <td>\r\n             \r\n             <span class={`size label label-${statusClass}`}>\r\n                {statusName}\r\n             </span>\r\n             \r\n           </td>\r\n    {/* <td>{data.idStatus}</td> */}\r\n    <td>{data.IdArea}</td>\r\n    <td>{data.idBill}</td>\r\n\r\n    <td><img src=\"https://dulichvietnam.com.vn/data/anh(17).jpg\" alt=\"\"/></td>\r\n\r\n\r\n    <td>\r\n        \r\n         \r\n        <button type=\"button\" \r\n        class=\"btn btn-primary\"  onClick = {() => this.onUpdate(data.IdTable)}><i class=\"fa fa-edit\"></i>&nbsp;&nbsp;Update</button>\r\n        \r\n        <button type=\"button\" \r\n        class=\"btn btn-danger margin-button\"\r\n        onClick = {() => this.onDelete(data.IdTable)}\r\n        ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Delete</button>\r\n        \r\n        \r\n\r\n     \r\n    </td>\r\n\r\n  </tr>\r\n      \r\n      \r\n       );\r\n      })\r\n    }\r\n    else\r\n    {\r\n      return (\r\n        <Emty/>\r\n      )\r\n    }\r\n   return result\r\n    };\r\n\r\nonUpdate = (data) =>{\r\nconst tables = this.props.table.data.map((table, index)=>{\r\nif(table.IdTable == data)\r\n{\r\n  this.props.showModal({type : {\r\n    mtable_ontap : {\r\n        type : 'MODAL_HEADER_FOR_ONTAP_TABLE',\r\n        event : 'show-modal',\r\n          }, \r\n          mtable_text : {\r\n          type : 'MODAL_HEADER_FOR_INSERT_UPDATE_TABLE',\r\n          event : 'Chỉnh sửa dữ liệu'\r\n          },\r\n          style_event : {\r\n            type : 'STATUS_STYLE_EVENT',\r\n            status : false\r\n          },\r\n          onchangetable_idtable : {\r\n            type : 'CHANGE_TABLE_IDTABLE',\r\n            text : table.IdTable\r\n          },\r\n          onchangetable_name : {\r\n            type : 'CHANGE_TABLE_NAME',\r\n            text : table.TableName\r\n          },\r\n          onchangetable_idarea : {\r\n            type : 'CHANGE_TABLE_IDAREA',\r\n            text : table.IdArea\r\n          }\r\n\r\n        }\r\n       \r\n  \r\n  \r\n  })\r\n}\r\n})\r\n\r\n \r\n}\r\n\r\n  callbackFunction = (data) => \r\n  {\r\n  \r\n    this.setState({\r\n      id : data.id,\r\n      idarea : data.IdArea,\r\n      name : data.BranchName,\r\n      onTap : 'modal fade show-modal'\r\n    })\r\n  }\r\n  callbackfunctionforSubmitupdate = (id, status) =>{\r\n    this.setState({onTap : status}, ()=>{\r\n      this.props.onUpdateTable(id)\r\n    })\r\n\r\n  }\r\n  callbackfunctionForonChange = (name, value) =>{\r\n   \r\n    this.setState({\r\n      [name] : value\r\n    })\r\n \r\n  }\r\n \r\n \r\n\r\n  render() \r\n  \r\n  {\r\n      \r\n    return (\r\n     <tbody>\r\n\t\t\t\t\t\t{this.showData(this.props.table.data, this.props.table.index)}\r\n\r\n\r\n\r\n\r\n           \r\n            \r\n             </tbody>\r\n       \r\n    )\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state =>{\r\n  \r\n\r\n  return{\r\n   table : state.table,\r\n   event : state.event\r\n\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return {\r\n    showModal : (tap) =>{\r\n      dispatch(tap)\r\n    },\r\n    fetchAllTables : (data) =>{\r\n      dispatch(action.acFetchTableRequest(data));\r\n     \r\n    },\r\n    onDeleteTable : (data) =>{\r\n      dispatch(action.acDeleteTableRequest(data))\r\n    }\r\n    // onDeleteProduct : (id) =>{\r\n     \r\n    //   dispatch(action.acDeleteProductsRequest(id));\r\n    // },\r\n    // onUpdateTable : (id) =>{\r\n     \r\n    //   dispatch(action.acUpdateProductsRequest(id));\r\n    // }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTable);"]},"metadata":{},"sourceType":"module"}